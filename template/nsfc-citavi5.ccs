<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<CitaviCitationStyle id="1986a8a3-d4ef-4e61-8b47-15a55b3f04fd" citaviVersion="5.7.1.0">
  <ContentVersion>1</ContentVersion>
  <SchemaVersion>4.9.0.2</SchemaVersion>
  <BuiltIn>false</BuiltIn>
  <CreatedOn>2013-04-30T00:21:14+08:00</CreatedOn>
  <CreatedBy>JHP</CreatedBy>
  <ModifiedOn>2020-04-12T01:40:52</ModifiedOn>
  <ModifiedBy>ToSingFUNG</ModifiedBy>
  <BasedOnStyleName>Biofuels</BasedOnStyleName>
  <Abbreviations />
  <Keywords />
  <CitationSystem>InTextReferenceNumber</CitationSystem>
  <ConcentrationArea>MedicinePharmacyAndNursing</ConcentrationArea>
  <Culture>en</Culture>
  <Name>Stupid NSFC Style Hahaha</Name>
  <HelpContext><![CDATA[{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang2055{\fonttbl{\f0\fswiss\fprq2\fcharset0 Segoe UI;}{\f1\fnil\fcharset0 Calibri;}}
{\colortbl ;\red225\green0\blue0;\red0\green0\blue0;\red0\green0\blue255;}
{\*\generator Riched20 10.0.14393}\viewkind4\uc1 
\pard\nowidctlpar\sa80\sl264\slmult1\cf1\f0\fs18 Future Virology\lang1033\par
\cf2\b Distinctive Feature:\b0\line\cf0\lang2055 The bibliography is sorted by and numbered in the order cited. Reference numbers are used for in-text citations.\par
Journal names are abbreviated. To add journal abbreviations, on the "Lists" menu, click "Periodicals". Double-click a journal name and enter the abbreviation in the "Abbreviation 1" field.\cf2\lang1033\par

\pard\widctlpar\sa160\sl252\slmult1\b Source:\b0  \line {\lang2055{\field{\*\fldinst{HYPERLINK http://www.futuremedicine.com/loi/fvl }}{\fldrslt{http://www.futuremedicine.com/loi/fvl\ul0\cf0}}}}\f0\fs18  (2017-02-27)\par

\pard\sa200\sl276\slmult1\cf0\f1\fs22\lang7\par
\par
}]]></HelpContext>
  <Notes />
  <AmbiguityResolving>AddLetterAfterYear</AmbiguityResolving>
  <AmbiguityResolvingAddFirstNamesFirstNameFormat>Full</AmbiguityResolvingAddFirstNamesFirstNameFormat>
  <AmbiguityResolvingAddFirstNamesFontStyle behavior="SameAsPrevious" />
  <AmbiguityResolvingAddFirstNamesMiddleNameFormat>Full</AmbiguityResolvingAddFirstNamesMiddleNameFormat>
  <AmbiguityResolvingAddFirstNamesMiddleNameUsage>All</AmbiguityResolvingAddFirstNamesMiddleNameUsage>
  <AmbiguityResolvingAddFirstNamesNameOrder>LastNameFirstName</AmbiguityResolvingAddFirstNamesNameOrder>
  <AppendIdentifyingLetterTo>Auto</AppendIdentifyingLetterTo>
  <AmbiguityResolvingShowAdditionalTemplateOptions>false</AmbiguityResolvingShowAdditionalTemplateOptions>
  <AutoFirstLetterCapitalization>None</AutoFirstLetterCapitalization>
  <CitationFormatOption1Name>1</CitationFormatOption1Name>
  <CitationFormatOption1Description />
  <CitationFormatOption2Name>2</CitationFormatOption2Name>
  <CitationFormatOption2Description />
  <CitationFormatOption3Name>3</CitationFormatOption3Name>
  <CitationFormatOption3Description />
  <LastTemplateUseCase>JournalArticle</LastTemplateUseCase>
  <Replacements><![CDATA[!.|!|?.|?|...|…|..|.|….|…|  | |()||[]||(, |(|( |(|: ,|:|: .|:|::|:|: :|:|(. |(|?:|?|#.|]]></Replacements>
  <CustomTemplateConditions />
  <ComponentParts>
    <ComponentPart id="a3a87188-76a2-492e-ba84-376ffc92e399">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Abstract</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="dfaf4d88-ae3a-4f0a-8f31-b468619fbd1b">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>_(Accessed {0})</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>NextElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>(</Text>
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>NextElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>Accessed </Text>
        </Element>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>AccessDate</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>d MMMM yyyy</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>in press</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>false</ReplaceInPrintPlaceholder>
          <UseFormat>true</UseFormat>
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>PreviousElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>)#</Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="4ef3cc16-bd71-4a74-b049-9fa0d32faa98">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Additions</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="03bda433-0c77-415c-b360-cd9150b5ec92">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>Authors</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>FirstNameLastName</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>Full</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>Full</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>; </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>; </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>false</Abbreviate>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text> </Text>
          </NameSuffixesSeparator>
          <OrganizationNameOrder>NameOnly</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="5e9eafff-ba0e-425e-81e7-a3e765f1baf5">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>AuthorsOrEditorsOrOrganizations</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameFirstNameCompact</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>Compact</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>Compact</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>true</Abbreviate>
          <AbbreviateIfMoreThanPersons>6</AbbreviateIfMoreThanPersons>
          <AbbreviateUpToPerson>3</AbbreviateUpToPerson>
          <Abbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define">
              <AllCaps>false</AllCaps>
              <Bold>false</Bold>
              <DoubleUnderline>false</DoubleUnderline>
              <Italic>true</Italic>
              <SmallCaps>false</SmallCaps>
              <StrikeThrough>false</StrikeThrough>
              <Subscript>false</Subscript>
              <Superscript>false</Superscript>
              <Underline>false</Underline>
            </FontStyle>
            <Text> et al.</Text>
          </Abbreviation>
          <AddLastPersonIfAbbreviated>false</AddLastPersonIfAbbreviated>
          <IgnoreLastPersonSeparatorIfAbbreviated>false</IgnoreLastPersonSeparatorIfAbbreviated>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text> </Text>
          </NameSuffixesSeparator>
          <OrganizationNameOrder>NameOnly</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="4bebf290-274f-4f77-bba8-f6db66ddd563">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Categories</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="792e2abd-0126-427b-b517-a881722c3899">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>, interview with {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>Collaborators</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameFirstNameCompact</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>AbbreviatedCompact</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>AbbreviatedCompact</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>false</Abbreviate>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text> </Text>
          </NameSuffixesSeparator>
          <GroupPrefixSingular type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>interview with </Text>
          </GroupPrefixSingular>
          <GroupPrefixPlural type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>interview with </Text>
          </GroupPrefixPlural>
          <OrganizationNameOrder>NameOnly</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="a2e6bdec-8000-455b-a4f6-f6b67fc97769">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Evaluation</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="06b35a65-6559-4f84-8cb8-deb40f197d7b">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>CreatedBy</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="bd592c10-11ef-43d0-97cc-aeec9da55f46">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>, {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>Date</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>dd MMMM</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>im Druck</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>false</ReplaceInPrintPlaceholder>
          <UseFormat>true</UseFormat>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="053e935d-1159-4bd8-a864-2a61ccea2084">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>_(Epub ahead of print)</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>.</Text>
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>Always</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text> (Epub ahead of print) </Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="35f8ea3b-4c17-4e23-b805-49bbeae76d9e">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>({0}) Edition [italic]</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>NextElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>(</Text>
        </Element>
        <Element type="NumericFieldElement">
          <ReferencePropertyId>Edition</ReferencePropertyId>
          <Required>false</Required>
          <DefaultNumericAbbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>th</Text>
          </DefaultNumericAbbreviation>
          <FontStyle behavior="Define">
            <AllCaps>false</AllCaps>
            <Bold>false</Bold>
            <DoubleUnderline>false</DoubleUnderline>
            <Italic>true</Italic>
            <SmallCaps>false</SmallCaps>
            <StrikeThrough>false</StrikeThrough>
            <Subscript>false</Subscript>
            <Superscript>false</Superscript>
            <Underline>false</Underline>
          </FontStyle>
          <PluralPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PluralPrefix>
          <PluralSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text> Edition</Text>
          </PluralSuffix>
          <SingularPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </SingularPrefix>
          <SingularSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text> Edition</Text>
          </SingularSuffix>
          <SpecialNumericAbbreviations type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>1|st|2|nd|3|rd</Text>
          </SpecialNumericAbbreviations>
          <TextPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextPrefix>
          <TextSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextSuffix>
          <UseNumericAbbreviations>true</UseNumericAbbreviations>
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>PreviousElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>)</Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="a16c973f-221d-4ac4-b00a-9c58fc7cdd3d">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="NumericFieldElement">
          <ReferencePropertyId>EditionNumberResolved</ReferencePropertyId>
          <Required>false</Required>
          <DefaultNumericAbbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>th</Text>
          </DefaultNumericAbbreviation>
          <FontStyle behavior="Define" />
          <PluralPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PluralPrefix>
          <PluralSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PluralSuffix>
          <SingularPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </SingularPrefix>
          <SingularSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </SingularSuffix>
          <SpecialNumericAbbreviations type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>1|st|2|nd|3|rd</Text>
          </SpecialNumericAbbreviations>
          <TextPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextPrefix>
          <TextSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextSuffix>
          <UseNumericAbbreviations>false</UseNumericAbbreviations>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="949e933d-973a-4647-ad4b-3461a0df387a">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0} (Ed./Eds)</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>Editors</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameFirstNameCompact</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>Compact</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>Compact</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>true</Abbreviate>
          <AbbreviateIfMoreThanPersons>6</AbbreviateIfMoreThanPersons>
          <AbbreviateUpToPerson>3</AbbreviateUpToPerson>
          <Abbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define">
              <AllCaps>false</AllCaps>
              <Bold>false</Bold>
              <DoubleUnderline>false</DoubleUnderline>
              <Italic>true</Italic>
              <SmallCaps>false</SmallCaps>
              <StrikeThrough>false</StrikeThrough>
              <Subscript>false</Subscript>
              <Superscript>false</Superscript>
              <Underline>false</Underline>
            </FontStyle>
            <Text> et al.</Text>
          </Abbreviation>
          <AddLastPersonIfAbbreviated>false</AddLastPersonIfAbbreviated>
          <IgnoreLastPersonSeparatorIfAbbreviated>false</IgnoreLastPersonSeparatorIfAbbreviated>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text> </Text>
          </NameSuffixesSeparator>
          <GroupSuffixSingular type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> (Ed.)</Text>
          </GroupSuffixSingular>
          <GroupSuffixPlural type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> (Eds)</Text>
          </GroupSuffixPlural>
          <OrganizationNameOrder>NameOnly</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="f7a71039-b2b2-4ef7-824c-6b7a21ecf7e8">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="FirstFootnoteCitationNumberFieldElement">
          <ReferencePropertyId>FirstFootnoteCitationNumber</ReferencePropertyId>
          <Required>false</Required>
          <ConsiderParentReference>false</ConsiderParentReference>
          <SuppressOutputIfFirstFootnoteEqualsCurrentFootnote>false</SuppressOutputIfFirstFootnoteEqualsCurrentFootnote>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="ad49701d-dc0c-451c-bbe6-770ea1987efd">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>CustomField1</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="db846622-652b-4bf3-910c-7c907ae7b4cd">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>CustomField2</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="a38f90b2-861a-49a8-a657-ba24d7bf3b98">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>CustomField3</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="64daedbb-25ba-4dc7-b1be-c7b8e2d16532">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>CustomField4</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="2c2c4550-9c99-4567-9abb-22f18700a0ef">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>, {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>Organizations</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameFirstNameCompact</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>AbbreviatedCompact</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>AbbreviatedCompact</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>false</Abbreviate>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text> </Text>
          </NameSuffixesSeparator>
          <OrganizationNameOrder>NameOnly</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="d0770e42-519d-4082-831b-e8bef3634807">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>. ISBN: {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>NextElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>ISBN: </Text>
        </Element>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Isbn</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="b4316588-f709-4497-ab76-59f2bca8afd9">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>. {0} [abbr. 1, italic]</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PeriodicalFieldElement">
          <ReferencePropertyId>Periodical</ReferencePropertyId>
          <Required>false</Required>
          <Fallback>true</Fallback>
          <FontStyle behavior="Define">
            <AllCaps>false</AllCaps>
            <Bold>false</Bold>
            <DoubleUnderline>false</DoubleUnderline>
            <Italic>true</Italic>
            <SmallCaps>false</SmallCaps>
            <StrikeThrough>false</StrikeThrough>
            <Subscript>false</Subscript>
            <Superscript>false</Superscript>
            <Underline>false</Underline>
          </FontStyle>
          <PeriodicalNameUsage>StandardAbbreviation</PeriodicalNameUsage>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="6b82fb2c-bd78-4c39-8246-a8c154c00a18">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Keywords</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="bece05bd-8f9d-43e3-a05d-ed04e006abc9">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Language</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="66d42403-64f2-4351-8ad1-8bc924c3c8cf">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>ModifiedBy</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="f2604652-5dd7-479c-b698-3aff4209f67f">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Locations</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="be03d518-b94d-41e1-aeed-f75930cd0cd7">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Notes</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="7de3982d-c43f-48b4-ae96-12b895f55264">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>({0})</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text />
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>NextElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>(</Text>
        </Element>
        <Element type="NumericFieldElement">
          <ReferencePropertyId>Number</ReferencePropertyId>
          <Required>false</Required>
          <DefaultNumericAbbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>th</Text>
          </DefaultNumericAbbreviation>
          <FontStyle behavior="Define" />
          <PluralPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PluralPrefix>
          <PluralSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PluralSuffix>
          <SingularPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </SingularPrefix>
          <SingularSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </SingularSuffix>
          <SpecialNumericAbbreviations type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>1|st|2|nd|3|rd</Text>
          </SpecialNumericAbbreviations>
          <TextPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextPrefix>
          <TextSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextSuffix>
          <UseNumericAbbreviations>false</UseNumericAbbreviations>
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>PreviousElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>)</Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="23d7e867-1161-4023-9a86-6ee1f4993616">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="NumericFieldElement">
          <ReferencePropertyId>PageCount</ReferencePropertyId>
          <Required>false</Required>
          <DefaultNumericAbbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>th</Text>
          </DefaultNumericAbbreviation>
          <FontStyle behavior="Define" />
          <PluralPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PluralPrefix>
          <PluralSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PluralSuffix>
          <SingularPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </SingularPrefix>
          <SingularSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </SingularSuffix>
          <SpecialNumericAbbreviations type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>1|st|2|nd|3|rd</Text>
          </SpecialNumericAbbreviations>
          <TextPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextPrefix>
          <TextSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextSuffix>
          <UseNumericAbbreviations>false</UseNumericAbbreviations>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="a88869ee-c7ec-4650-84ee-aba619c6ff15">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="NumericFieldElement">
          <ReferencePropertyId>NumberOfVolumes</ReferencePropertyId>
          <Required>false</Required>
          <DefaultNumericAbbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>th</Text>
          </DefaultNumericAbbreviation>
          <FontStyle behavior="Define" />
          <PluralPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PluralPrefix>
          <PluralSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PluralSuffix>
          <SingularPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </SingularPrefix>
          <SingularSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </SingularSuffix>
          <SpecialNumericAbbreviations type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>1|st|2|nd|3|rd</Text>
          </SpecialNumericAbbreviations>
          <TextPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextPrefix>
          <TextSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextSuffix>
          <UseNumericAbbreviations>false</UseNumericAbbreviations>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="ca30bc4a-7c09-4d64-969b-c087b00f852c">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>.{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="ElectronicAddressFieldElement">
          <ReferencePropertyId>OnlineAddress</ReferencePropertyId>
          <Required>false</Required>
          <MakePathWrappable>true</MakePathWrappable>
          <SuppressProtocol>true</SuppressProtocol>
          <SuppressWWW>false</SuppressWWW>
          <SuppressPath>false</SuppressPath>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="6f068bce-0d29-41b5-b393-066f067aaf62">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>OriginalCheckedBy</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="e50e5381-aa41-4dd2-8fa9-28cf47e9b81f">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>OriginalPublication</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>D</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>im Druck</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>true</ReplaceInPrintPlaceholder>
          <UseFormat>false</UseFormat>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="4ee161f3-a268-4a38-85c9-4c46f8c5f63f">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>OthersInvolved</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameFirstName</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>Full</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>Full</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>; </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>; </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>false</Abbreviate>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </NameSuffixesSeparator>
          <OrganizationNameOrder>NameAbbreviation</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="3a8a8765-0c11-4ec0-9349-b177f1ae1d07">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>, {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>: </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PageRangeFieldElement">
          <ReferencePropertyId>PageRange</ReferencePropertyId>
          <Required>false</Required>
          <ColumnNumeralSystem>Arabic</ColumnNumeralSystem>
          <ColumnUseNumeralSystemOfReference>true</ColumnUseNumeralSystemOfReference>
          <ColumnMultiNumberingStyle>FullRange</ColumnMultiNumberingStyle>
          <ColumnMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </ColumnMultiPrefix>
          <ColumnMultiStartFontStyle behavior="Define" />
          <ColumnMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>–</Text>
          </ColumnMultiSeparator>
          <ColumnMultiEndFontStyle behavior="Define" />
          <ColumnMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </ColumnMultiSuffix>
          <ColumnOneHasSpecialFormat>false</ColumnOneHasSpecialFormat>
          <ColumnOneNumberingStyle>StartPageOnly</ColumnOneNumberingStyle>
          <ColumnOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </ColumnOnePrefix>
          <ColumnOneStartFontStyle behavior="Define" />
          <ColumnOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnOneSeparator>
          <ColumnOneEndFontStyle behavior="Define" />
          <ColumnOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </ColumnOneSuffix>
          <ColumnTwoHasSpecialFormat>false</ColumnTwoHasSpecialFormat>
          <ColumnTwoNumberingStyle>FullRange</ColumnTwoNumberingStyle>
          <ColumnTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </ColumnTwoPrefix>
          <ColumnTwoStartFontStyle behavior="Define" />
          <ColumnTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnTwoSeparator>
          <ColumnTwoEndFontStyle behavior="Define" />
          <ColumnTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </ColumnTwoSuffix>
          <OtherNumeralSystem>Arabic</OtherNumeralSystem>
          <OtherUseNumeralSystemOfReference>true</OtherUseNumeralSystemOfReference>
          <OtherMultiNumberingStyle>FullRange</OtherMultiNumberingStyle>
          <OtherMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </OtherMultiPrefix>
          <OtherMultiStartFontStyle behavior="Define" />
          <OtherMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>–</Text>
          </OtherMultiSeparator>
          <OtherMultiEndFontStyle behavior="Define" />
          <OtherMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </OtherMultiSuffix>
          <OtherOneHasSpecialFormat>false</OtherOneHasSpecialFormat>
          <OtherOneNumberingStyle>StartPageOnly</OtherOneNumberingStyle>
          <OtherOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </OtherOnePrefix>
          <OtherOneStartFontStyle behavior="Define" />
          <OtherOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherOneSeparator>
          <OtherOneEndFontStyle behavior="Define" />
          <OtherOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </OtherOneSuffix>
          <OtherTwoHasSpecialFormat>false</OtherTwoHasSpecialFormat>
          <OtherTwoNumberingStyle>FullRange</OtherTwoNumberingStyle>
          <OtherTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </OtherTwoPrefix>
          <OtherTwoStartFontStyle behavior="Define" />
          <OtherTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherTwoSeparator>
          <OtherTwoEndFontStyle behavior="Define" />
          <OtherTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </OtherTwoSuffix>
          <PageNumeralSystem>Arabic</PageNumeralSystem>
          <PageUseNumeralSystemOfReference>true</PageUseNumeralSystemOfReference>
          <PageMultiNumberingStyle>FullRange</PageMultiNumberingStyle>
          <PageMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PageMultiPrefix>
          <PageMultiStartFontStyle behavior="Define" />
          <PageMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>–</Text>
          </PageMultiSeparator>
          <PageMultiEndFontStyle behavior="Define" />
          <PageMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PageMultiSuffix>
          <PageOneHasSpecialFormat>false</PageOneHasSpecialFormat>
          <PageOneNumberingStyle>StartPageOnly</PageOneNumberingStyle>
          <PageOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PageOnePrefix>
          <PageOneStartFontStyle behavior="Define" />
          <PageOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageOneSeparator>
          <PageOneEndFontStyle behavior="Define" />
          <PageOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PageOneSuffix>
          <PageTwoHasSpecialFormat>false</PageTwoHasSpecialFormat>
          <PageTwoNumberingStyle>FullRange</PageTwoNumberingStyle>
          <PageTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PageTwoPrefix>
          <PageTwoStartFontStyle behavior="Define" />
          <PageTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageTwoSeparator>
          <PageTwoEndFontStyle behavior="Define" />
          <PageTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PageTwoSuffix>
          <ParagraphNumeralSystem>Arabic</ParagraphNumeralSystem>
          <ParagraphUseNumeralSystemOfReference>true</ParagraphUseNumeralSystemOfReference>
          <ParagraphMultiNumberingStyle>FullRange</ParagraphMultiNumberingStyle>
          <ParagraphMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </ParagraphMultiPrefix>
          <ParagraphMultiStartFontStyle behavior="Define" />
          <ParagraphMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>–</Text>
          </ParagraphMultiSeparator>
          <ParagraphMultiEndFontStyle behavior="Define" />
          <ParagraphMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </ParagraphMultiSuffix>
          <ParagraphOneHasSpecialFormat>false</ParagraphOneHasSpecialFormat>
          <ParagraphOneNumberingStyle>StartPageOnly</ParagraphOneNumberingStyle>
          <ParagraphOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </ParagraphOnePrefix>
          <ParagraphOneStartFontStyle behavior="Define" />
          <ParagraphOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphOneSeparator>
          <ParagraphOneEndFontStyle behavior="Define" />
          <ParagraphOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </ParagraphOneSuffix>
          <ParagraphTwoHasSpecialFormat>false</ParagraphTwoHasSpecialFormat>
          <ParagraphTwoNumberingStyle>FullRange</ParagraphTwoNumberingStyle>
          <ParagraphTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </ParagraphTwoPrefix>
          <ParagraphTwoStartFontStyle behavior="Define" />
          <ParagraphTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphTwoSeparator>
          <ParagraphTwoEndFontStyle behavior="Define" />
          <ParagraphTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </ParagraphTwoSuffix>
          <MarginNumeralSystem>Arabic</MarginNumeralSystem>
          <MarginUseNumeralSystemOfReference>true</MarginUseNumeralSystemOfReference>
          <MarginMultiNumberingStyle>FullRange</MarginMultiNumberingStyle>
          <MarginMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </MarginMultiPrefix>
          <MarginMultiStartFontStyle behavior="Define" />
          <MarginMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>–</Text>
          </MarginMultiSeparator>
          <MarginMultiEndFontStyle behavior="Define" />
          <MarginMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </MarginMultiSuffix>
          <MarginOneHasSpecialFormat>false</MarginOneHasSpecialFormat>
          <MarginOneNumberingStyle>FullRange</MarginOneNumberingStyle>
          <MarginOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </MarginOnePrefix>
          <MarginOneStartFontStyle behavior="Define" />
          <MarginOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginOneSeparator>
          <MarginOneEndFontStyle behavior="Define" />
          <MarginOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </MarginOneSuffix>
          <MarginTwoHasSpecialFormat>false</MarginTwoHasSpecialFormat>
          <MarginTwoNumberingStyle>FullRange</MarginTwoNumberingStyle>
          <MarginTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </MarginTwoPrefix>
          <MarginTwoStartFontStyle behavior="Define" />
          <MarginTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginTwoSeparator>
          <MarginTwoEndFontStyle behavior="Define" />
          <MarginTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </MarginTwoSuffix>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="23c05302-be24-495b-a19d-c5aef1876144">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>ParallelTitle</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="61f0c59f-6319-4276-8413-a17b555ae045">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>, {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PlaceOfPublicationFieldElement">
          <ReferencePropertyId>PlaceOfPublication</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Abbreviate>false</Abbreviate>
          <AbbreviateIfMoreThanPlaces>5</AbbreviateIfMoreThanPlaces>
          <AbbreviateUpToPlace>4</AbbreviateUpToPlace>
          <Abbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, et al.</Text>
          </Abbreviation>
          <Separator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text> </Text>
          </Separator>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="d00f5c5f-7776-4e7c-ac58-1e0fe52a78e2">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Price</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="79204226-d788-4faf-b603-a9d9904a0e6c">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>. {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Publishers</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="595d220f-9e8e-44ba-85e9-fe105940604f">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="QuotationPageRangeFieldElement">
          <ReferencePropertyId>QuotationPageRange</ReferencePropertyId>
          <Required>false</Required>
          <ColumnNumeralSystem>Arabic</ColumnNumeralSystem>
          <ColumnUseNumeralSystemOfReference>true</ColumnUseNumeralSystemOfReference>
          <ColumnMultiNumberingStyle>FullRange</ColumnMultiNumberingStyle>
          <ColumnMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ColumnMultiPrefix>
          <ColumnMultiStartFontStyle behavior="Define" />
          <ColumnMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </ColumnMultiSeparator>
          <ColumnMultiEndFontStyle behavior="SameAsPrevious" />
          <ColumnMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnMultiSuffix>
          <ColumnOneHasSpecialFormat>false</ColumnOneHasSpecialFormat>
          <ColumnOneNumberingStyle>StartPageOnly</ColumnOneNumberingStyle>
          <ColumnOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ColumnOnePrefix>
          <ColumnOneStartFontStyle behavior="Define" />
          <ColumnOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnOneSeparator>
          <ColumnOneEndFontStyle behavior="Define" />
          <ColumnOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnOneSuffix>
          <ColumnTwoHasSpecialFormat>false</ColumnTwoHasSpecialFormat>
          <ColumnTwoNumberingStyle>FullRange</ColumnTwoNumberingStyle>
          <ColumnTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ColumnTwoPrefix>
          <ColumnTwoStartFontStyle behavior="Define" />
          <ColumnTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnTwoSeparator>
          <ColumnTwoEndFontStyle behavior="Define" />
          <ColumnTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnTwoSuffix>
          <OtherNumeralSystem>Arabic</OtherNumeralSystem>
          <OtherUseNumeralSystemOfReference>true</OtherUseNumeralSystemOfReference>
          <OtherMultiNumberingStyle>FullRange</OtherMultiNumberingStyle>
          <OtherMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OtherMultiPrefix>
          <OtherMultiStartFontStyle behavior="Define" />
          <OtherMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </OtherMultiSeparator>
          <OtherMultiEndFontStyle behavior="SameAsPrevious" />
          <OtherMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherMultiSuffix>
          <OtherOneHasSpecialFormat>false</OtherOneHasSpecialFormat>
          <OtherOneNumberingStyle>StartPageOnly</OtherOneNumberingStyle>
          <OtherOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OtherOnePrefix>
          <OtherOneStartFontStyle behavior="Define" />
          <OtherOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherOneSeparator>
          <OtherOneEndFontStyle behavior="Define" />
          <OtherOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherOneSuffix>
          <OtherTwoHasSpecialFormat>false</OtherTwoHasSpecialFormat>
          <OtherTwoNumberingStyle>FullRange</OtherTwoNumberingStyle>
          <OtherTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OtherTwoPrefix>
          <OtherTwoStartFontStyle behavior="Define" />
          <OtherTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherTwoSeparator>
          <OtherTwoEndFontStyle behavior="Define" />
          <OtherTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherTwoSuffix>
          <PageNumeralSystem>Arabic</PageNumeralSystem>
          <PageUseNumeralSystemOfReference>true</PageUseNumeralSystemOfReference>
          <PageMultiNumberingStyle>FullRange</PageMultiNumberingStyle>
          <PageMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </PageMultiPrefix>
          <PageMultiStartFontStyle behavior="Define" />
          <PageMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </PageMultiSeparator>
          <PageMultiEndFontStyle behavior="SameAsPrevious" />
          <PageMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageMultiSuffix>
          <PageOneHasSpecialFormat>false</PageOneHasSpecialFormat>
          <PageOneNumberingStyle>StartPageOnly</PageOneNumberingStyle>
          <PageOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </PageOnePrefix>
          <PageOneStartFontStyle behavior="Define" />
          <PageOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageOneSeparator>
          <PageOneEndFontStyle behavior="Define" />
          <PageOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageOneSuffix>
          <PageTwoHasSpecialFormat>false</PageTwoHasSpecialFormat>
          <PageTwoNumberingStyle>FullRange</PageTwoNumberingStyle>
          <PageTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </PageTwoPrefix>
          <PageTwoStartFontStyle behavior="Define" />
          <PageTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageTwoSeparator>
          <PageTwoEndFontStyle behavior="Define" />
          <PageTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageTwoSuffix>
          <ParagraphNumeralSystem>Arabic</ParagraphNumeralSystem>
          <ParagraphUseNumeralSystemOfReference>true</ParagraphUseNumeralSystemOfReference>
          <ParagraphMultiNumberingStyle>FullRange</ParagraphMultiNumberingStyle>
          <ParagraphMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ParagraphMultiPrefix>
          <ParagraphMultiStartFontStyle behavior="Define" />
          <ParagraphMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </ParagraphMultiSeparator>
          <ParagraphMultiEndFontStyle behavior="SameAsPrevious" />
          <ParagraphMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphMultiSuffix>
          <ParagraphOneHasSpecialFormat>false</ParagraphOneHasSpecialFormat>
          <ParagraphOneNumberingStyle>StartPageOnly</ParagraphOneNumberingStyle>
          <ParagraphOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ParagraphOnePrefix>
          <ParagraphOneStartFontStyle behavior="Define" />
          <ParagraphOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphOneSeparator>
          <ParagraphOneEndFontStyle behavior="Define" />
          <ParagraphOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphOneSuffix>
          <ParagraphTwoHasSpecialFormat>false</ParagraphTwoHasSpecialFormat>
          <ParagraphTwoNumberingStyle>FullRange</ParagraphTwoNumberingStyle>
          <ParagraphTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ParagraphTwoPrefix>
          <ParagraphTwoStartFontStyle behavior="Define" />
          <ParagraphTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphTwoSeparator>
          <ParagraphTwoEndFontStyle behavior="Define" />
          <ParagraphTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphTwoSuffix>
          <MarginNumeralSystem>Arabic</MarginNumeralSystem>
          <MarginUseNumeralSystemOfReference>true</MarginUseNumeralSystemOfReference>
          <MarginMultiNumberingStyle>FullRange</MarginMultiNumberingStyle>
          <MarginMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </MarginMultiPrefix>
          <MarginMultiStartFontStyle behavior="Define" />
          <MarginMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </MarginMultiSeparator>
          <MarginMultiEndFontStyle behavior="Define" />
          <MarginMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginMultiSuffix>
          <MarginOneHasSpecialFormat>false</MarginOneHasSpecialFormat>
          <MarginOneNumberingStyle>FullRange</MarginOneNumberingStyle>
          <MarginOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </MarginOnePrefix>
          <MarginOneStartFontStyle behavior="Define" />
          <MarginOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginOneSeparator>
          <MarginOneEndFontStyle behavior="Define" />
          <MarginOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginOneSuffix>
          <MarginTwoHasSpecialFormat>false</MarginTwoHasSpecialFormat>
          <MarginTwoNumberingStyle>FullRange</MarginTwoNumberingStyle>
          <MarginTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </MarginTwoPrefix>
          <MarginTwoStartFontStyle behavior="Define" />
          <MarginTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginTwoSeparator>
          <MarginTwoEndFontStyle behavior="Define" />
          <MarginTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginTwoSuffix>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="63f589fa-d1a7-43ca-8bc1-f01cb3634c2b">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>TextLinks</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="9bbe4713-48a1-42bd-aef2-0a1fd8486553">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SequenceNumber</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="a41f2013-77f6-4de6-a7bd-e45c03f9e96e">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>, {0} [italic]</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="SeriesTitleFieldElement">
          <ReferencePropertyId>SeriesTitle</ReferencePropertyId>
          <Required>false</Required>
          <Fallback>true</Fallback>
          <FontStyle behavior="Define">
            <AllCaps>false</AllCaps>
            <Bold>false</Bold>
            <DoubleUnderline>false</DoubleUnderline>
            <Italic>true</Italic>
            <SmallCaps>false</SmallCaps>
            <StrikeThrough>false</StrikeThrough>
            <Subscript>false</Subscript>
            <Superscript>false</Superscript>
            <Underline>false</Underline>
          </FontStyle>
          <SeriesTitleNameUsage>Name</SeriesTitleNameUsage>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="3347c6cb-688f-42a9-a052-dbaa64f933e4">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>SeriesTitleEditors</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameFirstName</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>Full</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>Full</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>; </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>; </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>false</Abbreviate>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </NameSuffixesSeparator>
          <OrganizationNameOrder>NameAbbreviation</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="6d0e7167-1c5f-4fbb-ba02-ba945b15ed38">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>ShortTitle</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="a2f71003-7056-4775-aafb-97db01b6f199">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SpecificField1</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="5d821cd7-c876-4efb-a9c5-f7aba86465ab">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SpecificField2</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="c10e725b-5ac0-4631-9f37-bd63419ac3d0">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SpecificField3</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="99cbb126-1674-4452-bd2f-86d0741dfeed">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SpecificField4</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="169a0b27-7a5a-4b28-9b27-68a4e50c13fe">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SpecificField5</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="7d710248-e003-4f2a-bb6f-dfa9982464e3">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SpecificField6</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="5a777803-cd1a-4ea6-9c04-80da6c53f579">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SpecificField7</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="79227c39-933e-4bf6-b37b-610b28cfb91d">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>StorageMedium</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="77e61aaa-c83a-4041-a797-4ca1e1c34cf9">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Tasks</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="de2d7411-1fad-4c67-9304-452f1c5dbfac">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>.{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>; </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Title</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="dea2ed0e-8675-4e11-a565-4a793b0b7608">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>: {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>: </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Subtitle</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="994cf6b2-dd95-4dcd-8b90-c1a3b487f992">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>TitleInOtherLanguages</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="ceedde6c-faa8-4b55-a91f-c986ee1d866d">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>, {0} [italic]</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>TitleSupplement</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define">
            <AllCaps>false</AllCaps>
            <Bold>false</Bold>
            <DoubleUnderline>false</DoubleUnderline>
            <Italic>true</Italic>
            <SmallCaps>false</SmallCaps>
            <StrikeThrough>false</StrikeThrough>
            <Subscript>false</Subscript>
            <Superscript>false</Superscript>
            <Underline>false</Underline>
          </FontStyle>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="2384957e-821c-4718-bc5a-af43f1add434">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>TableOfContents</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="6bfb4263-08c7-4c25-b73f-1a025722b681">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="CitationKeyFieldElement">
          <ReferencePropertyId>CitationKey</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <UseTitleIfCitationKeyIsMissing>false</UseTitleIfCitationKeyIsMissing>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="08eed213-0674-47c8-bd26-07e10fc5193d">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>_({0})</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>NextElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>(</Text>
        </Element>
        <Element type="TextFieldElement">
          <ReferencePropertyId>TranslatedTitle</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>PreviousElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>)</Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="bac4034b-c754-4060-ac19-06f869ff368c">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>UniformTitle</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="04f56958-12cc-456c-8029-4d52fac8e60b">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>_{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="NumericFieldElement">
          <ReferencePropertyId>Volume</ReferencePropertyId>
          <Required>false</Required>
          <DefaultNumericAbbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>th</Text>
          </DefaultNumericAbbreviation>
          <FontStyle behavior="Define" />
          <PluralPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PluralPrefix>
          <PluralSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PluralSuffix>
          <SingularPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </SingularPrefix>
          <SingularSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </SingularSuffix>
          <SpecialNumericAbbreviations type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>1|st|2|nd|3|rd</Text>
          </SpecialNumericAbbreviations>
          <TextPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </TextPrefix>
          <TextSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </TextSuffix>
          <UseNumericAbbreviations>false</UseNumericAbbreviations>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="9d45fd9c-503a-43fa-a3e3-8e790c2f19f0">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>Year</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>yyyy</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text> </Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>true</ReplaceInPrintPlaceholder>
          <UseFormat>true</UseFormat>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="74fd56dc-5f67-4443-ad0a-7a88b9ada8db">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>_({0})</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>YearResolved</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>yyyy</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>In Press</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>true</ReplaceInPrintPlaceholder>
          <UseFormat>true</UseFormat>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="e3693ac2-8226-4122-a26e-bc661f27f663">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>(</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>Always</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>(</Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="fef6da7b-7250-4c9a-abf3-dd709a07d572">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>)</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text />
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>Always</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>)</Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="0be517b1-6aea-46d4-9bb6-2c62ccff80db">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>[</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>Always</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>[</Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="83663154-b915-4657-939a-af4f211dd3c8">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>]</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>Always</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>]</Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="f98d9986-2596-407a-87bc-383feced1443">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>YearResolved</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>yyy</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>in press</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>true</ReplaceInPrintPlaceholder>
          <UseFormat>true</UseFormat>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="ce9380d5-2a3e-4307-9518-f7f4eb17c254">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0} [last name]</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text />
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>AuthorsOrEditorsOrOrganizations</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameOnly</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>Full</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>Full</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>false</Abbreviate>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </NameSuffixesSeparator>
          <OrganizationNameOrder>NameAbbreviation</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="2e659124-17bb-4687-a37c-97f3e74e4514">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>, vol {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="NumericFieldElement">
          <ReferencePropertyId>Volume</ReferencePropertyId>
          <Required>false</Required>
          <DefaultNumericAbbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>th</Text>
          </DefaultNumericAbbreviation>
          <FontStyle behavior="Define" />
          <PluralPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>vol </Text>
          </PluralPrefix>
          <PluralSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PluralSuffix>
          <SingularPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>vol </Text>
          </SingularPrefix>
          <SingularSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </SingularSuffix>
          <SpecialNumericAbbreviations type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>1|st|2|nd|3|rd</Text>
          </SpecialNumericAbbreviations>
          <TextPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextPrefix>
          <TextSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextSuffix>
          <UseNumericAbbreviations>false</UseNumericAbbreviations>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="32cdb76c-7aae-428d-9b27-3e2ce694c4c1">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>, {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PageRangeFieldElement">
          <ReferencePropertyId>PageRange</ReferencePropertyId>
          <Required>false</Required>
          <ColumnNumeralSystem>Arabic</ColumnNumeralSystem>
          <ColumnUseNumeralSystemOfReference>true</ColumnUseNumeralSystemOfReference>
          <ColumnMultiNumberingStyle>FullRange</ColumnMultiNumberingStyle>
          <ColumnMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ColumnMultiPrefix>
          <ColumnMultiStartFontStyle behavior="Define" />
          <ColumnMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </ColumnMultiSeparator>
          <ColumnMultiEndFontStyle behavior="SameAsPrevious" />
          <ColumnMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnMultiSuffix>
          <ColumnOneHasSpecialFormat>false</ColumnOneHasSpecialFormat>
          <ColumnOneNumberingStyle>StartPageOnly</ColumnOneNumberingStyle>
          <ColumnOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ColumnOnePrefix>
          <ColumnOneStartFontStyle behavior="Define" />
          <ColumnOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnOneSeparator>
          <ColumnOneEndFontStyle behavior="Define" />
          <ColumnOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnOneSuffix>
          <ColumnTwoHasSpecialFormat>false</ColumnTwoHasSpecialFormat>
          <ColumnTwoNumberingStyle>FullRange</ColumnTwoNumberingStyle>
          <ColumnTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ColumnTwoPrefix>
          <ColumnTwoStartFontStyle behavior="Define" />
          <ColumnTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnTwoSeparator>
          <ColumnTwoEndFontStyle behavior="Define" />
          <ColumnTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnTwoSuffix>
          <OtherNumeralSystem>Arabic</OtherNumeralSystem>
          <OtherUseNumeralSystemOfReference>true</OtherUseNumeralSystemOfReference>
          <OtherMultiNumberingStyle>FullRange</OtherMultiNumberingStyle>
          <OtherMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OtherMultiPrefix>
          <OtherMultiStartFontStyle behavior="Define" />
          <OtherMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </OtherMultiSeparator>
          <OtherMultiEndFontStyle behavior="SameAsPrevious" />
          <OtherMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherMultiSuffix>
          <OtherOneHasSpecialFormat>false</OtherOneHasSpecialFormat>
          <OtherOneNumberingStyle>StartPageOnly</OtherOneNumberingStyle>
          <OtherOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OtherOnePrefix>
          <OtherOneStartFontStyle behavior="Define" />
          <OtherOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherOneSeparator>
          <OtherOneEndFontStyle behavior="Define" />
          <OtherOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherOneSuffix>
          <OtherTwoHasSpecialFormat>false</OtherTwoHasSpecialFormat>
          <OtherTwoNumberingStyle>FullRange</OtherTwoNumberingStyle>
          <OtherTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OtherTwoPrefix>
          <OtherTwoStartFontStyle behavior="Define" />
          <OtherTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherTwoSeparator>
          <OtherTwoEndFontStyle behavior="Define" />
          <OtherTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherTwoSuffix>
          <PageNumeralSystem>Arabic</PageNumeralSystem>
          <PageUseNumeralSystemOfReference>true</PageUseNumeralSystemOfReference>
          <PageMultiNumberingStyle>FullRange</PageMultiNumberingStyle>
          <PageMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </PageMultiPrefix>
          <PageMultiStartFontStyle behavior="Define" />
          <PageMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </PageMultiSeparator>
          <PageMultiEndFontStyle behavior="SameAsPrevious" />
          <PageMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageMultiSuffix>
          <PageOneHasSpecialFormat>false</PageOneHasSpecialFormat>
          <PageOneNumberingStyle>StartPageOnly</PageOneNumberingStyle>
          <PageOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </PageOnePrefix>
          <PageOneStartFontStyle behavior="Define" />
          <PageOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageOneSeparator>
          <PageOneEndFontStyle behavior="Define" />
          <PageOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageOneSuffix>
          <PageTwoHasSpecialFormat>false</PageTwoHasSpecialFormat>
          <PageTwoNumberingStyle>FullRange</PageTwoNumberingStyle>
          <PageTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text>pp </Text>
          </PageTwoPrefix>
          <PageTwoStartFontStyle behavior="Define" />
          <PageTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageTwoSeparator>
          <PageTwoEndFontStyle behavior="Define" />
          <PageTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageTwoSuffix>
          <ParagraphNumeralSystem>Arabic</ParagraphNumeralSystem>
          <ParagraphUseNumeralSystemOfReference>true</ParagraphUseNumeralSystemOfReference>
          <ParagraphMultiNumberingStyle>FullRange</ParagraphMultiNumberingStyle>
          <ParagraphMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ParagraphMultiPrefix>
          <ParagraphMultiStartFontStyle behavior="Define" />
          <ParagraphMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </ParagraphMultiSeparator>
          <ParagraphMultiEndFontStyle behavior="SameAsPrevious" />
          <ParagraphMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphMultiSuffix>
          <ParagraphOneHasSpecialFormat>false</ParagraphOneHasSpecialFormat>
          <ParagraphOneNumberingStyle>StartPageOnly</ParagraphOneNumberingStyle>
          <ParagraphOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ParagraphOnePrefix>
          <ParagraphOneStartFontStyle behavior="Define" />
          <ParagraphOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphOneSeparator>
          <ParagraphOneEndFontStyle behavior="Define" />
          <ParagraphOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphOneSuffix>
          <ParagraphTwoHasSpecialFormat>false</ParagraphTwoHasSpecialFormat>
          <ParagraphTwoNumberingStyle>FullRange</ParagraphTwoNumberingStyle>
          <ParagraphTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ParagraphTwoPrefix>
          <ParagraphTwoStartFontStyle behavior="Define" />
          <ParagraphTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphTwoSeparator>
          <ParagraphTwoEndFontStyle behavior="Define" />
          <ParagraphTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphTwoSuffix>
          <MarginNumeralSystem>Arabic</MarginNumeralSystem>
          <MarginUseNumeralSystemOfReference>true</MarginUseNumeralSystemOfReference>
          <MarginMultiNumberingStyle>FullRange</MarginMultiNumberingStyle>
          <MarginMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </MarginMultiPrefix>
          <MarginMultiStartFontStyle behavior="Define" />
          <MarginMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </MarginMultiSeparator>
          <MarginMultiEndFontStyle behavior="Define" />
          <MarginMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginMultiSuffix>
          <MarginOneHasSpecialFormat>false</MarginOneHasSpecialFormat>
          <MarginOneNumberingStyle>FullRange</MarginOneNumberingStyle>
          <MarginOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </MarginOnePrefix>
          <MarginOneStartFontStyle behavior="Define" />
          <MarginOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginOneSeparator>
          <MarginOneEndFontStyle behavior="Define" />
          <MarginOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginOneSuffix>
          <MarginTwoHasSpecialFormat>false</MarginTwoHasSpecialFormat>
          <MarginTwoNumberingStyle>FullRange</MarginTwoNumberingStyle>
          <MarginTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </MarginTwoPrefix>
          <MarginTwoStartFontStyle behavior="Define" />
          <MarginTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginTwoSeparator>
          <MarginTwoEndFontStyle behavior="Define" />
          <MarginTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginTwoSuffix>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="b2d0b5c0-56ab-4a03-af98-3cb18d84e6bb">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>_doi: {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>NextElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>doi:</Text>
        </Element>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Doi</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="79a85c4a-4b7d-401f-9750-b5633213bccd">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="IndexInBibliographyFieldElement">
          <ReferencePropertyId>IndexInBibliography</ReferencePropertyId>
          <Required>false</Required>
          <MainIndexTextBeforeNumber type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </MainIndexTextBeforeNumber>
          <MainIndexNumberNumeralSystem>Arabic</MainIndexNumberNumeralSystem>
          <MainIndexNumberFontStyle behavior="Define" />
          <MainIndexTextAfterNumber type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </MainIndexTextAfterNumber>
          <SubIndexTextBeforeNumber type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </SubIndexTextBeforeNumber>
          <SubIndexNumberNumeralSystem>LetterLowerCase</SubIndexNumberNumeralSystem>
          <SubIndexNumberFontStyle behavior="Define" />
          <SubIndexTextAfterNumber type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </SubIndexTextAfterNumber>
          <TextBetweenIndexParts type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </TextBetweenIndexParts>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="c1447ceb-cc5e-4e5f-a3a5-5351074950fb">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <FilterCode><![CDATA[//#431516
//Version 1.8
//Capitalize first letter of simple text field elements (such as Title or Subtitle etc)

using System.Collections.Generic;
using System.Globalization;
using System.Text.RegularExpressions;
using SwissAcademic.Citavi;
using System;
using System.Linq;

namespace SwissAcademic.Citavi.Citations
{
	public class ComponentPartFilter
		:
		IComponentPartFilter
	{
		public IEnumerable<ITextUnit> GetTextUnits(ComponentPart componentPart, Template template, Citation citation, out bool handled)
		{
			//Name of filter: Convert output to title case (with exceptions, such as "and", "or" etc.)
			//Version 1.8: Parametrized conversion of full upper case words; functionality was impaired in version 1.7
			//Version 1.7: Added checking for null on GetTextUnitsUnfiltered() to avoid NullReferenceExceptions at runtime (which may lead to auto-deactivation of filter)
			//Version 1.6: ToUpperFirstLetter() method now handles words completely in UPPERCASE and takes culture into consideration
			//Version 1.5: capitalize stopwords directly after quotation mark
			//Version 1.4: improved word tokenization
			//Version 1.3: ignore expressions which are written completely in upper case
			//Version 1.2: new option to ensure that the reference language is "English"

			var ensureEnglishIsReferenceLanguage = true;	//if set to false, the component part filter will ALWAYS capitalize, regardless of the reference's language
			var convertFullUpperCaseWords = ConvertFullUpperCaseWords.Never;
			
			#region Info on ConvertFullUpperCaseWords parameter
			/*
				Example 1: UN and US government made agreement on payments of contribution
				Example 2: UN AND US GOVERNMENT MADE AGREEMENT ON PAYMENTS OF CONTRIBUTION

				ConvertFullUpperCaseWords.Never (default)
				Result 1: UN and US Government Made Agreement on Payments of Contribution
				Result 2: UN and US GOVERNMENT MADE AGREEMENT on PAYMENTS of CONTRIBUTION

				ConvertFullUpperCaseWords.Always: 
				Result 1: Un and Us Government Made Agreement on Payments of Contribution
				Result 2: Un and Us Government Made Agreement on Payments of Contribution

				ConvertFullUpperCaseWords.Auto:
				Result 1: UN and US Government Made Agreement on Payments of Contribution
				Result 2: Un and Us Government Made Agreement on Payments of Contribution
			*/
			#endregion 

			CultureInfo culture = CultureInfo.CurrentCulture;
			
			handled = false;

			if (citation == null) return null;
			if (citation.Reference == null) return null;

			if (componentPart == null) return null;
			if (template == null) return null;

			if (ensureEnglishIsReferenceLanguage)
			{
				if (string.IsNullOrEmpty(citation.Reference.Language)) return null;

				var termsList = new string[] {
					"en",
					"eng",
					"engl",
					"English",
					"Englisch"
				};

				var regEx = new Regex(@"\b(" + string.Join("|", termsList) + @")\b", RegexOptions.IgnoreCase);
				if (!regEx.IsMatch(citation.Reference.Language))
				{
					return null;
				}
			}

			//Words that will not be capitalized; add words to this list as required
        	string[] exceptionsArray = { "a", "an", "and", "as", "at",
										 "but", "by", "down", "for", "from",
										 "in", "into", "nor",
										 "of", "on", "onto", "or", "over",
										 "so", "the", "till", "to",
										 "up", "via", "with", "yet" };

			List<string> exceptions = new List<string>(exceptionsArray);

			var textUnits = componentPart.GetTextUnitsUnfiltered(citation, template);
			if (textUnits == null || !textUnits.Any()) return null;
			
			string fullString = textUnits.ToString();
			bool fullUpperCaseTreatment = false;
			switch (convertFullUpperCaseWords)
			{
				case ConvertFullUpperCaseWords.Always:
					fullUpperCaseTreatment = true;
					break;
					
				case ConvertFullUpperCaseWords.Never:
				{
					fullUpperCaseTreatment = false;
				}
				break;
					
				default:
				case ConvertFullUpperCaseWords.Auto:
				{
					if (HasLowerCase(fullString))
					{
						fullUpperCaseTreatment = false;
					}
					else
					{
						fullUpperCaseTreatment = true;
					}	
				}
				break;
			}

			string prevWord = string.Empty;

			for (int i = 0; i < textUnits.Count; i++)
			{
				//textUnit.Text = textUnits[i].Text.ToLower(culture);
				var text = textUnits[i].Text;

				//Break the input text into a list of words at whitespaces,
				//hyphens, opening parens, and ASCII quotation marks
				string splitPattern = @"(\s)|(-)|(\()|(\"")";
				List<string> words = new List<string>(Regex.Split(text, splitPattern));
							
				var counter = 0;
				text = string.Empty;				
				
				//Check each remaining word against the list, and append it to the new text. 
				//Leave words in upper case unchanged, unless they appear in the exception list.
				foreach (string word in words)
		        {					
	                counter++;
	                if (counter == 1) // first word in a textunit
	                {
	                 	if (i == 0) text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);  // first word overall => capitalize
						else if ((String.IsNullOrWhiteSpace(prevWord)) && !(exceptions.Contains(word.ToLower(culture)))) text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);  // new textunit after space and not stopword => capitalize
						else text = text + word; // in all other cases: do nothing 						           
	                }
	                else if (prevWord == @"""") // capitalize also stopwords directly after quotation marks
	                {
	                    text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);
	                }
	                else if (exceptions.Contains(word.ToLower(culture))) // check list of exceptions
	                {
	                    text = text + word.ToLower(culture);
	                }
	                else // in all other cases: capitalize
	                {
	                    text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);
	                }
					prevWord = word; // save current word as previous word for next iteration
				}				
				textUnits[i].Text = text;
			}
			
			handled = true;
			return textUnits;
		}

		
		public string ToUpperFirstLetter(string input, bool ensureAllButFirstIsLower = false, CultureInfo culture = null)
		{
			if (string.IsNullOrEmpty(input)) return input;

			char[] letters = input.ToCharArray();
			
			for (var i = 0; i < letters.Length; i++)
			{
				if (i == 0) 
				{
					letters[0] = char.ToUpper(letters[0], culture);
					continue;
				}
				
				if (i > 0 && ensureAllButFirstIsLower == false) break;
				letters[i] = char.ToLower(letters[i], culture);
			}

			return new string(letters);
		}

		public enum ConvertFullUpperCaseWords
		{
			Never,
			Always,
			Auto		//converts full uppercase words to lower case only if the conmplete text is written in uppercase
		};
		
		public bool HasLowerCase (string input) 
		{
		    return !string.IsNullOrEmpty(input) && input.Any(c => char.IsLower(c));
		}
	}
}]]></FilterCode>
      <IsFilterActivated>true</IsFilterActivated>
      <FilterName>Title_toTitleCase</FilterName>
      <FilterNotes />
      <Name>. {0} [italic]</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Title</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define">
            <AllCaps>false</AllCaps>
            <Bold>false</Bold>
            <DoubleUnderline>false</DoubleUnderline>
            <Italic>true</Italic>
            <SmallCaps>false</SmallCaps>
            <StrikeThrough>false</StrikeThrough>
            <Subscript>false</Subscript>
            <Superscript>false</Superscript>
            <Underline>false</Underline>
          </FontStyle>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="b3848884-7e13-49c4-97d8-1cb10966bc63">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <FilterCode><![CDATA[//#431516
//Version 1.8
//Capitalize first letter of simple text field elements (such as Title or Subtitle etc)

using System.Collections.Generic;
using System.Globalization;
using System.Text.RegularExpressions;
using SwissAcademic.Citavi;
using System;
using System.Linq;

namespace SwissAcademic.Citavi.Citations
{
	public class ComponentPartFilter
		:
		IComponentPartFilter
	{
		public IEnumerable<ITextUnit> GetTextUnits(ComponentPart componentPart, Template template, Citation citation, out bool handled)
		{
			//Name of filter: Convert output to title case (with exceptions, such as "and", "or" etc.)
			//Version 1.8: Parametrized conversion of full upper case words; functionality was impaired in version 1.7
			//Version 1.7: Added checking for null on GetTextUnitsUnfiltered() to avoid NullReferenceExceptions at runtime (which may lead to auto-deactivation of filter)
			//Version 1.6: ToUpperFirstLetter() method now handles words completely in UPPERCASE and takes culture into consideration
			//Version 1.5: capitalize stopwords directly after quotation mark
			//Version 1.4: improved word tokenization
			//Version 1.3: ignore expressions which are written completely in upper case
			//Version 1.2: new option to ensure that the reference language is "English"

			var ensureEnglishIsReferenceLanguage = true;	//if set to false, the component part filter will ALWAYS capitalize, regardless of the reference's language
			var convertFullUpperCaseWords = ConvertFullUpperCaseWords.Never;
			
			#region Info on ConvertFullUpperCaseWords parameter
			/*
				Example 1: UN and US government made agreement on payments of contribution
				Example 2: UN AND US GOVERNMENT MADE AGREEMENT ON PAYMENTS OF CONTRIBUTION

				ConvertFullUpperCaseWords.Never (default)
				Result 1: UN and US Government Made Agreement on Payments of Contribution
				Result 2: UN and US GOVERNMENT MADE AGREEMENT on PAYMENTS of CONTRIBUTION

				ConvertFullUpperCaseWords.Always: 
				Result 1: Un and Us Government Made Agreement on Payments of Contribution
				Result 2: Un and Us Government Made Agreement on Payments of Contribution

				ConvertFullUpperCaseWords.Auto:
				Result 1: UN and US Government Made Agreement on Payments of Contribution
				Result 2: Un and Us Government Made Agreement on Payments of Contribution
			*/
			#endregion 

			CultureInfo culture = CultureInfo.CurrentCulture;
			
			handled = false;

			if (citation == null) return null;
			if (citation.Reference == null) return null;

			if (componentPart == null) return null;
			if (template == null) return null;

			if (ensureEnglishIsReferenceLanguage)
			{
				if (string.IsNullOrEmpty(citation.Reference.Language)) return null;

				var termsList = new string[] {
					"en",
					"eng",
					"engl",
					"English",
					"Englisch"
				};

				var regEx = new Regex(@"\b(" + string.Join("|", termsList) + @")\b", RegexOptions.IgnoreCase);
				if (!regEx.IsMatch(citation.Reference.Language))
				{
					return null;
				}
			}

			//Words that will not be capitalized; add words to this list as required
        	string[] exceptionsArray = { "a", "an", "and", "as", "at",
										 "but", "by", "down", "for", "from",
										 "in", "into", "nor",
										 "of", "on", "onto", "or", "over",
										 "so", "the", "till", "to",
										 "up", "via", "with", "yet" };

			List<string> exceptions = new List<string>(exceptionsArray);

			var textUnits = componentPart.GetTextUnitsUnfiltered(citation, template);
			if (textUnits == null || !textUnits.Any()) return null;
			
			string fullString = textUnits.ToString();
			bool fullUpperCaseTreatment = false;
			switch (convertFullUpperCaseWords)
			{
				case ConvertFullUpperCaseWords.Always:
					fullUpperCaseTreatment = true;
					break;
					
				case ConvertFullUpperCaseWords.Never:
				{
					fullUpperCaseTreatment = false;
				}
				break;
					
				default:
				case ConvertFullUpperCaseWords.Auto:
				{
					if (HasLowerCase(fullString))
					{
						fullUpperCaseTreatment = false;
					}
					else
					{
						fullUpperCaseTreatment = true;
					}	
				}
				break;
			}

			string prevWord = string.Empty;

			for (int i = 0; i < textUnits.Count; i++)
			{
				//textUnit.Text = textUnits[i].Text.ToLower(culture);
				var text = textUnits[i].Text;

				//Break the input text into a list of words at whitespaces,
				//hyphens, opening parens, and ASCII quotation marks
				string splitPattern = @"(\s)|(-)|(\()|(\"")";
				List<string> words = new List<string>(Regex.Split(text, splitPattern));
							
				var counter = 0;
				text = string.Empty;				
				
				//Check each remaining word against the list, and append it to the new text. 
				//Leave words in upper case unchanged, unless they appear in the exception list.
				foreach (string word in words)
		        {					
	                counter++;
	                if (counter == 1) // first word in a textunit
	                {
	                 	if (i == 0) text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);  // first word overall => capitalize
						else if ((String.IsNullOrWhiteSpace(prevWord)) && !(exceptions.Contains(word.ToLower(culture)))) text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);  // new textunit after space and not stopword => capitalize
						else text = text + word; // in all other cases: do nothing 						           
	                }
	                else if (prevWord == @"""") // capitalize also stopwords directly after quotation marks
	                {
	                    text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);
	                }
	                else if (exceptions.Contains(word.ToLower(culture))) // check list of exceptions
	                {
	                    text = text + word.ToLower(culture);
	                }
	                else // in all other cases: capitalize
	                {
	                    text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);
	                }
					prevWord = word; // save current word as previous word for next iteration
				}				
				textUnits[i].Text = text;
			}
			
			handled = true;
			return textUnits;
		}

		
		public string ToUpperFirstLetter(string input, bool ensureAllButFirstIsLower = false, CultureInfo culture = null)
		{
			if (string.IsNullOrEmpty(input)) return input;

			char[] letters = input.ToCharArray();
			
			for (var i = 0; i < letters.Length; i++)
			{
				if (i == 0) 
				{
					letters[0] = char.ToUpper(letters[0], culture);
					continue;
				}
				
				if (i > 0 && ensureAllButFirstIsLower == false) break;
				letters[i] = char.ToLower(letters[i], culture);
			}

			return new string(letters);
		}

		public enum ConvertFullUpperCaseWords
		{
			Never,
			Always,
			Auto		//converts full uppercase words to lower case only if the conmplete text is written in uppercase
		};
		
		public bool HasLowerCase (string input) 
		{
		    return !string.IsNullOrEmpty(input) && input.Any(c => char.IsLower(c));
		}
	}
}]]></FilterCode>
      <IsFilterActivated>true</IsFilterActivated>
      <FilterName>Title_ToTitleCase</FilterName>
      <FilterNotes />
      <Name>: {0} [italic]</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>: </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Subtitle</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define">
            <AllCaps>false</AllCaps>
            <Bold>false</Bold>
            <DoubleUnderline>false</DoubleUnderline>
            <Italic>true</Italic>
            <SmallCaps>false</SmallCaps>
            <StrikeThrough>false</StrikeThrough>
            <Subscript>false</Subscript>
            <Superscript>false</Superscript>
            <Underline>false</Underline>
          </FontStyle>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="59f75300-47b8-4b5c-9d60-aee01693134b">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>_(In Press)</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>Always</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>(In Press)</Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="e0d909d5-54fe-46f4-8b22-ce9a82a44f8a">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>(Epub ahead of print)</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>Always</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>(Epub ahead of print)</Text>
        </Element>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>Date2</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>yyyy</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>im Druck</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>false</ReplaceInPrintPlaceholder>
          <UseFormat>true</UseFormat>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="5bbe3121-13e2-4220-a080-2a9b875acc7e">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <FilterCode><![CDATA[//#431516
//Version 1.8
//Capitalize first letter of simple text field elements (such as Title or Subtitle etc)

using System.Collections.Generic;
using System.Globalization;
using System.Text.RegularExpressions;
using SwissAcademic.Citavi;
using System;
using System.Linq;

namespace SwissAcademic.Citavi.Citations
{
	public class ComponentPartFilter
		:
		IComponentPartFilter
	{
		public IEnumerable<ITextUnit> GetTextUnits(ComponentPart componentPart, Template template, Citation citation, out bool handled)
		{
			//Name of filter: Convert output to title case (with exceptions, such as "and", "or" etc.)
			//Version 1.8: Parametrized conversion of full upper case words; functionality was impaired in version 1.7
			//Version 1.7: Added checking for null on GetTextUnitsUnfiltered() to avoid NullReferenceExceptions at runtime (which may lead to auto-deactivation of filter)
			//Version 1.6: ToUpperFirstLetter() method now handles words completely in UPPERCASE and takes culture into consideration
			//Version 1.5: capitalize stopwords directly after quotation mark
			//Version 1.4: improved word tokenization
			//Version 1.3: ignore expressions which are written completely in upper case
			//Version 1.2: new option to ensure that the reference language is "English"

			var ensureEnglishIsReferenceLanguage = true;	//if set to false, the component part filter will ALWAYS capitalize, regardless of the reference's language
			var convertFullUpperCaseWords = ConvertFullUpperCaseWords.Never;
			
			#region Info on ConvertFullUpperCaseWords parameter
			/*
				Example 1: UN and US government made agreement on payments of contribution
				Example 2: UN AND US GOVERNMENT MADE AGREEMENT ON PAYMENTS OF CONTRIBUTION

				ConvertFullUpperCaseWords.Never (default)
				Result 1: UN and US Government Made Agreement on Payments of Contribution
				Result 2: UN and US GOVERNMENT MADE AGREEMENT on PAYMENTS of CONTRIBUTION

				ConvertFullUpperCaseWords.Always: 
				Result 1: Un and Us Government Made Agreement on Payments of Contribution
				Result 2: Un and Us Government Made Agreement on Payments of Contribution

				ConvertFullUpperCaseWords.Auto:
				Result 1: UN and US Government Made Agreement on Payments of Contribution
				Result 2: Un and Us Government Made Agreement on Payments of Contribution
			*/
			#endregion 

			CultureInfo culture = CultureInfo.CurrentCulture;
			
			handled = false;

			if (citation == null) return null;
			if (citation.Reference == null) return null;

			if (componentPart == null) return null;
			if (template == null) return null;

			if (ensureEnglishIsReferenceLanguage)
			{
				if (string.IsNullOrEmpty(citation.Reference.Language)) return null;

				var termsList = new string[] {
					"en",
					"eng",
					"engl",
					"English",
					"Englisch"
				};

				var regEx = new Regex(@"\b(" + string.Join("|", termsList) + @")\b", RegexOptions.IgnoreCase);
				if (!regEx.IsMatch(citation.Reference.Language))
				{
					return null;
				}
			}

			//Words that will not be capitalized; add words to this list as required
        	string[] exceptionsArray = { "a", "an", "and", "as", "at",
										 "but", "by", "down", "for", "from",
										 "in", "into", "nor",
										 "of", "on", "onto", "or", "over",
										 "so", "the", "till", "to",
										 "up", "via", "with", "yet" };

			List<string> exceptions = new List<string>(exceptionsArray);

			var textUnits = componentPart.GetTextUnitsUnfiltered(citation, template);
			if (textUnits == null || !textUnits.Any()) return null;
			
			string fullString = textUnits.ToString();
			bool fullUpperCaseTreatment = false;
			switch (convertFullUpperCaseWords)
			{
				case ConvertFullUpperCaseWords.Always:
					fullUpperCaseTreatment = true;
					break;
					
				case ConvertFullUpperCaseWords.Never:
				{
					fullUpperCaseTreatment = false;
				}
				break;
					
				default:
				case ConvertFullUpperCaseWords.Auto:
				{
					if (HasLowerCase(fullString))
					{
						fullUpperCaseTreatment = false;
					}
					else
					{
						fullUpperCaseTreatment = true;
					}	
				}
				break;
			}

			string prevWord = string.Empty;

			for (int i = 0; i < textUnits.Count; i++)
			{
				//textUnit.Text = textUnits[i].Text.ToLower(culture);
				var text = textUnits[i].Text;

				//Break the input text into a list of words at whitespaces,
				//hyphens, opening parens, and ASCII quotation marks
				string splitPattern = @"(\s)|(-)|(\()|(\"")";
				List<string> words = new List<string>(Regex.Split(text, splitPattern));
							
				var counter = 0;
				text = string.Empty;				
				
				//Check each remaining word against the list, and append it to the new text. 
				//Leave words in upper case unchanged, unless they appear in the exception list.
				foreach (string word in words)
		        {					
	                counter++;
	                if (counter == 1) // first word in a textunit
	                {
	                 	if (i == 0) text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);  // first word overall => capitalize
						else if ((String.IsNullOrWhiteSpace(prevWord)) && !(exceptions.Contains(word.ToLower(culture)))) text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);  // new textunit after space and not stopword => capitalize
						else text = text + word; // in all other cases: do nothing 						           
	                }
	                else if (prevWord == @"""") // capitalize also stopwords directly after quotation marks
	                {
	                    text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);
	                }
	                else if (exceptions.Contains(word.ToLower(culture))) // check list of exceptions
	                {
	                    text = text + word.ToLower(culture);
	                }
	                else // in all other cases: capitalize
	                {
	                    text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);
	                }
					prevWord = word; // save current word as previous word for next iteration
				}				
				textUnits[i].Text = text;
			}
			
			handled = true;
			return textUnits;
		}

		
		public string ToUpperFirstLetter(string input, bool ensureAllButFirstIsLower = false, CultureInfo culture = null)
		{
			if (string.IsNullOrEmpty(input)) return input;

			char[] letters = input.ToCharArray();
			
			for (var i = 0; i < letters.Length; i++)
			{
				if (i == 0) 
				{
					letters[0] = char.ToUpper(letters[0], culture);
					continue;
				}
				
				if (i > 0 && ensureAllButFirstIsLower == false) break;
				letters[i] = char.ToLower(letters[i], culture);
			}

			return new string(letters);
		}

		public enum ConvertFullUpperCaseWords
		{
			Never,
			Always,
			Auto		//converts full uppercase words to lower case only if the conmplete text is written in uppercase
		};
		
		public bool HasLowerCase (string input) 
		{
		    return !string.IsNullOrEmpty(input) && input.Any(c => char.IsLower(c));
		}
	}
}]]></FilterCode>
      <IsFilterActivated>true</IsFilterActivated>
      <FilterName>Title_ToTitleCase</FilterName>
      <FilterNotes />
      <Name>. {0} [abbr. 1, italic] [title case]</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PeriodicalFieldElement">
          <ReferencePropertyId>Periodical</ReferencePropertyId>
          <Required>false</Required>
          <Fallback>true</Fallback>
          <FontStyle behavior="Define">
            <AllCaps>false</AllCaps>
            <Bold>false</Bold>
            <DoubleUnderline>false</DoubleUnderline>
            <Italic>true</Italic>
            <SmallCaps>false</SmallCaps>
            <StrikeThrough>false</StrikeThrough>
            <Subscript>false</Subscript>
            <Superscript>false</Superscript>
            <Underline>false</Underline>
          </FontStyle>
          <PeriodicalNameUsage>StandardAbbreviation</PeriodicalNameUsage>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="0b569981-5ae7-4d2f-9145-7fe6a09ff3be">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>_({0}) (Epub ahead of print)</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>NextElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>(</Text>
        </Element>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>YearResolved</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>yyyy</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>In Press</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>false</ReplaceInPrintPlaceholder>
          <UseFormat>true</UseFormat>
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>PreviousElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>)</Text>
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>Always</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text> (Epub ahead of print) </Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="5360c9b9-0c6d-474f-b198-500ac3d69cf6">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>_({0}) [In Press]</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>NextElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>(</Text>
        </Element>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>YearResolved</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>yyyy</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>In Press</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>true</ReplaceInPrintPlaceholder>
          <UseFormat>true</UseFormat>
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>PreviousElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>)</Text>
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>PreviousElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>(</Text>
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>PreviousElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>In Press</Text>
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>PreviousElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>)</Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="10a9476e-07b6-4aea-8bf9-86dd6b534579">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>Neue Komponente: {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>Always</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>.</Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="21d6af0c-be81-4f24-8cb2-5d9dcd353f80">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>_(Accessed {0})</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>NextElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>(</Text>
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>NextElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>Accessed </Text>
        </Element>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>AccessDate</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>d MMMM yyyy</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>in press</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>false</ReplaceInPrintPlaceholder>
          <UseFormat>true</UseFormat>
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>PreviousElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>)</Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="dffd73a6-0f44-419e-be3e-53ef507feede">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>_({0}) [Kopie]</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>.</Text>
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>Reference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>NextElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>(</Text>
        </Element>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>YearResolved</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>yyyy</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>In Press</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>true</ReplaceInPrintPlaceholder>
          <UseFormat>true</UseFormat>
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>PreviousElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>)</Text>
        </Element>
      </Elements>
    </ComponentPart>
  </ComponentParts>
  <ParentComponentParts>
    <ComponentPart id="fe728e68-6853-4787-a9aa-7efd27ed9cb1">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Abstract</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="65fd36e6-b1e3-4a41-9470-dd12230b9588">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>AccessDate</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>D</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>im Druck</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>true</ReplaceInPrintPlaceholder>
          <UseFormat>false</UseFormat>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="bdf1563f-d552-455d-8ce2-f8bfed45ebd2">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Additions</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="ad211069-4e07-4d93-ae2e-0894512a9040">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>Authors</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameFirstName</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>Full</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>Full</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>; </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>; </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>false</Abbreviate>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </NameSuffixesSeparator>
          <OrganizationNameOrder>NameAbbreviation</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="ffe95d0a-63bb-41cf-a28c-dd15d6862865">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>AuthorsOrEditorsOrOrganizations</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameFirstName</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>Full</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>Full</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>; </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>; </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>false</Abbreviate>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </NameSuffixesSeparator>
          <OrganizationNameOrder>NameAbbreviation</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="9bf0c2b3-f24e-490c-b7a6-7fe57923d3d1">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>IndexInBibliography</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="2a3bc0eb-d579-4e7e-90c5-30b5d3781757">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Categories</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="08227987-fbc1-4b36-87ad-ba2e2c78d7e7">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>Collaborators</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameFirstName</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>Full</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>Full</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>false</Abbreviate>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </NameSuffixesSeparator>
          <OrganizationNameOrder>NameAbbreviation</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="d35450fa-5a10-4d3b-9a11-02a05ecad98d">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Evaluation</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="83ac2272-da0a-4650-8139-d9d666ff1297">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>CreatedBy</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="aaa5ec95-15e4-4ce4-862b-b75c455f8a03">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>Date</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>D</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>im Druck</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>true</ReplaceInPrintPlaceholder>
          <UseFormat>false</UseFormat>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="eb6599ba-7f1a-4203-a14d-26fcd80eb99b">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>Date2</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>D</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>im Druck</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>true</ReplaceInPrintPlaceholder>
          <UseFormat>false</UseFormat>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="94bf5353-1fd8-445f-aee3-b6ff9bd8123f">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>, {0} edn</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="NumericFieldElement">
          <ReferencePropertyId>Edition</ReferencePropertyId>
          <Required>false</Required>
          <DefaultNumericAbbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>th</Text>
          </DefaultNumericAbbreviation>
          <FontStyle behavior="Define" />
          <PluralPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PluralPrefix>
          <PluralSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> edn</Text>
          </PluralSuffix>
          <SingularPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </SingularPrefix>
          <SingularSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> edn</Text>
          </SingularSuffix>
          <SpecialNumericAbbreviations type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>1|st|2|nd|3|rd</Text>
          </SpecialNumericAbbreviations>
          <TextPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </TextPrefix>
          <TextSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </TextSuffix>
          <UseNumericAbbreviations>true</UseNumericAbbreviations>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="6f988bb3-d237-48c7-bc85-2f04266519c8">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="NumericFieldElement">
          <ReferencePropertyId>EditionNumberResolved</ReferencePropertyId>
          <Required>false</Required>
          <DefaultNumericAbbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>th</Text>
          </DefaultNumericAbbreviation>
          <FontStyle behavior="Define" />
          <PluralPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PluralPrefix>
          <PluralSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PluralSuffix>
          <SingularPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </SingularPrefix>
          <SingularSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </SingularSuffix>
          <SpecialNumericAbbreviations type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>1|st|2|nd|3|rd</Text>
          </SpecialNumericAbbreviations>
          <TextPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </TextPrefix>
          <TextSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </TextSuffix>
          <UseNumericAbbreviations>false</UseNumericAbbreviations>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="1928bd02-ecf8-4a3a-abcf-4c6775beae51">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>In:  {0} (Ed./Eds)</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>Always</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>In: </Text>
        </Element>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>Editors</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameFirstNameCompact</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>Compact</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>Compact</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>false</Abbreviate>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text> </Text>
          </NameSuffixesSeparator>
          <GroupSuffixSingular type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> (Ed.)</Text>
          </GroupSuffixSingular>
          <GroupSuffixPlural type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> (Eds)</Text>
          </GroupSuffixPlural>
          <OrganizationNameOrder>NameOnly</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="53d0d8ed-f1d6-4526-9a6f-a962ae328532">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="FirstFootnoteCitationNumberFieldElement">
          <ReferencePropertyId>FirstFootnoteCitationNumber</ReferencePropertyId>
          <Required>false</Required>
          <ConsiderParentReference>false</ConsiderParentReference>
          <SuppressOutputIfFirstFootnoteEqualsCurrentFootnote>false</SuppressOutputIfFirstFootnoteEqualsCurrentFootnote>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="d705f890-0823-4b20-8769-62dee58e4f0b">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>CustomField1</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="fbfe0b14-ecd3-4e2b-adb1-ecd6e7b8054d">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>CustomField2</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="b94a6a74-19cc-48cf-a0e3-b51da748726c">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>CustomField3</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="469ce150-113d-456d-a589-b621e1de29b2">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>CustomField4</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="5f110f19-d483-465b-8cff-a886bb69979e">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>Organizations</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameFirstName</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>Full</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>Full</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>; </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>; </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>false</Abbreviate>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </NameSuffixesSeparator>
          <OrganizationNameOrder>NameAbbreviation</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="9ea2aa39-1310-444b-8f96-a08c1fc2b03a">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Isbn</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="878494d1-7bb0-4e4c-be4d-23491109a882">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PeriodicalFieldElement">
          <ReferencePropertyId>Periodical</ReferencePropertyId>
          <Required>false</Required>
          <Fallback>true</Fallback>
          <FontStyle behavior="Define" />
          <PeriodicalNameUsage>Name</PeriodicalNameUsage>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="086e2f6a-572c-4cf2-a9ca-47ccb79cffee">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Keywords</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="476568a5-4b6c-4618-b922-e062f76988a0">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Language</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="3aa0d89e-7375-45eb-b8c7-a7421375af07">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>ModifiedBy</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="a30d4276-f452-43ea-9ed2-ebad582fad96">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Locations</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="0f4a901b-f422-48b0-b6ed-cb490bace94c">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Notes</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="fa0550d6-2ad1-430e-856e-354151904aba">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="NumericFieldElement">
          <ReferencePropertyId>Number</ReferencePropertyId>
          <Required>false</Required>
          <DefaultNumericAbbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>th</Text>
          </DefaultNumericAbbreviation>
          <FontStyle behavior="Define" />
          <PluralPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PluralPrefix>
          <PluralSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PluralSuffix>
          <SingularPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </SingularPrefix>
          <SingularSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </SingularSuffix>
          <SpecialNumericAbbreviations type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>1|st|2|nd|3|rd</Text>
          </SpecialNumericAbbreviations>
          <TextPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextPrefix>
          <TextSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextSuffix>
          <UseNumericAbbreviations>false</UseNumericAbbreviations>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="1d7f0ddf-a79d-4123-8252-dd666a2c1769">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="NumericFieldElement">
          <ReferencePropertyId>PageCount</ReferencePropertyId>
          <Required>false</Required>
          <DefaultNumericAbbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>th</Text>
          </DefaultNumericAbbreviation>
          <FontStyle behavior="Define" />
          <PluralPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PluralPrefix>
          <PluralSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PluralSuffix>
          <SingularPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </SingularPrefix>
          <SingularSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </SingularSuffix>
          <SpecialNumericAbbreviations type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>1|st|2|nd|3|rd</Text>
          </SpecialNumericAbbreviations>
          <TextPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextPrefix>
          <TextSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </TextSuffix>
          <UseNumericAbbreviations>false</UseNumericAbbreviations>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="b8107e60-24f8-400d-b7e8-e6db9c1d3557">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="NumericFieldElement">
          <ReferencePropertyId>NumberOfVolumes</ReferencePropertyId>
          <Required>false</Required>
          <DefaultNumericAbbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>th</Text>
          </DefaultNumericAbbreviation>
          <FontStyle behavior="Define" />
          <PluralPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PluralPrefix>
          <PluralSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PluralSuffix>
          <SingularPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </SingularPrefix>
          <SingularSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </SingularSuffix>
          <SpecialNumericAbbreviations type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>1|st|2|nd|3|rd</Text>
          </SpecialNumericAbbreviations>
          <TextPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </TextPrefix>
          <TextSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </TextSuffix>
          <UseNumericAbbreviations>false</UseNumericAbbreviations>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="8dd96177-37f3-4c8d-b656-0c4658fc9f05">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="ElectronicAddressFieldElement">
          <ReferencePropertyId>OnlineAddress</ReferencePropertyId>
          <Required>false</Required>
          <MakePathWrappable>false</MakePathWrappable>
          <SuppressProtocol>false</SuppressProtocol>
          <SuppressWWW>false</SuppressWWW>
          <SuppressPath>false</SuppressPath>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="3dbb8ebb-7196-4e72-a600-46143bf05a98">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>OriginalCheckedBy</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="7715cc12-6b90-447d-9d3f-203f75e7e5a2">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>OriginalPublication</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>D</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>im Druck</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>true</ReplaceInPrintPlaceholder>
          <UseFormat>false</UseFormat>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="bba7ec45-d8ec-4d98-9171-748e9b7e2311">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>OthersInvolved</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameFirstName</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>Full</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>Full</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>; </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>; </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>false</Abbreviate>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </NameSuffixesSeparator>
          <OrganizationNameOrder>NameAbbreviation</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="0b1df1fe-b3e9-4736-a2c3-7f042c0c0c1c">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PageRangeFieldElement">
          <ReferencePropertyId>PageRange</ReferencePropertyId>
          <Required>false</Required>
          <ColumnNumeralSystem>Arabic</ColumnNumeralSystem>
          <ColumnUseNumeralSystemOfReference>true</ColumnUseNumeralSystemOfReference>
          <ColumnMultiNumberingStyle>FullRange</ColumnMultiNumberingStyle>
          <ColumnMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ColumnMultiPrefix>
          <ColumnMultiStartFontStyle behavior="Define" />
          <ColumnMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </ColumnMultiSeparator>
          <ColumnMultiEndFontStyle behavior="SameAsPrevious" />
          <ColumnMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnMultiSuffix>
          <ColumnOneHasSpecialFormat>false</ColumnOneHasSpecialFormat>
          <ColumnOneNumberingStyle>StartPageOnly</ColumnOneNumberingStyle>
          <ColumnOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ColumnOnePrefix>
          <ColumnOneStartFontStyle behavior="Define" />
          <ColumnOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnOneSeparator>
          <ColumnOneEndFontStyle behavior="Define" />
          <ColumnOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnOneSuffix>
          <ColumnTwoHasSpecialFormat>false</ColumnTwoHasSpecialFormat>
          <ColumnTwoNumberingStyle>FullRange</ColumnTwoNumberingStyle>
          <ColumnTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ColumnTwoPrefix>
          <ColumnTwoStartFontStyle behavior="Define" />
          <ColumnTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnTwoSeparator>
          <ColumnTwoEndFontStyle behavior="Define" />
          <ColumnTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnTwoSuffix>
          <OtherNumeralSystem>Arabic</OtherNumeralSystem>
          <OtherUseNumeralSystemOfReference>true</OtherUseNumeralSystemOfReference>
          <OtherMultiNumberingStyle>FullRange</OtherMultiNumberingStyle>
          <OtherMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OtherMultiPrefix>
          <OtherMultiStartFontStyle behavior="Define" />
          <OtherMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </OtherMultiSeparator>
          <OtherMultiEndFontStyle behavior="SameAsPrevious" />
          <OtherMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherMultiSuffix>
          <OtherOneHasSpecialFormat>false</OtherOneHasSpecialFormat>
          <OtherOneNumberingStyle>StartPageOnly</OtherOneNumberingStyle>
          <OtherOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OtherOnePrefix>
          <OtherOneStartFontStyle behavior="Define" />
          <OtherOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherOneSeparator>
          <OtherOneEndFontStyle behavior="Define" />
          <OtherOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherOneSuffix>
          <OtherTwoHasSpecialFormat>false</OtherTwoHasSpecialFormat>
          <OtherTwoNumberingStyle>FullRange</OtherTwoNumberingStyle>
          <OtherTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OtherTwoPrefix>
          <OtherTwoStartFontStyle behavior="Define" />
          <OtherTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherTwoSeparator>
          <OtherTwoEndFontStyle behavior="Define" />
          <OtherTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherTwoSuffix>
          <PageNumeralSystem>Arabic</PageNumeralSystem>
          <PageUseNumeralSystemOfReference>true</PageUseNumeralSystemOfReference>
          <PageMultiNumberingStyle>FullRange</PageMultiNumberingStyle>
          <PageMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </PageMultiPrefix>
          <PageMultiStartFontStyle behavior="Define" />
          <PageMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </PageMultiSeparator>
          <PageMultiEndFontStyle behavior="SameAsPrevious" />
          <PageMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageMultiSuffix>
          <PageOneHasSpecialFormat>false</PageOneHasSpecialFormat>
          <PageOneNumberingStyle>StartPageOnly</PageOneNumberingStyle>
          <PageOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </PageOnePrefix>
          <PageOneStartFontStyle behavior="Define" />
          <PageOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageOneSeparator>
          <PageOneEndFontStyle behavior="Define" />
          <PageOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageOneSuffix>
          <PageTwoHasSpecialFormat>false</PageTwoHasSpecialFormat>
          <PageTwoNumberingStyle>FullRange</PageTwoNumberingStyle>
          <PageTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </PageTwoPrefix>
          <PageTwoStartFontStyle behavior="Define" />
          <PageTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageTwoSeparator>
          <PageTwoEndFontStyle behavior="Define" />
          <PageTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageTwoSuffix>
          <ParagraphNumeralSystem>Arabic</ParagraphNumeralSystem>
          <ParagraphUseNumeralSystemOfReference>true</ParagraphUseNumeralSystemOfReference>
          <ParagraphMultiNumberingStyle>FullRange</ParagraphMultiNumberingStyle>
          <ParagraphMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ParagraphMultiPrefix>
          <ParagraphMultiStartFontStyle behavior="Define" />
          <ParagraphMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </ParagraphMultiSeparator>
          <ParagraphMultiEndFontStyle behavior="SameAsPrevious" />
          <ParagraphMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphMultiSuffix>
          <ParagraphOneHasSpecialFormat>false</ParagraphOneHasSpecialFormat>
          <ParagraphOneNumberingStyle>StartPageOnly</ParagraphOneNumberingStyle>
          <ParagraphOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ParagraphOnePrefix>
          <ParagraphOneStartFontStyle behavior="Define" />
          <ParagraphOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphOneSeparator>
          <ParagraphOneEndFontStyle behavior="Define" />
          <ParagraphOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphOneSuffix>
          <ParagraphTwoHasSpecialFormat>false</ParagraphTwoHasSpecialFormat>
          <ParagraphTwoNumberingStyle>FullRange</ParagraphTwoNumberingStyle>
          <ParagraphTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ParagraphTwoPrefix>
          <ParagraphTwoStartFontStyle behavior="Define" />
          <ParagraphTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphTwoSeparator>
          <ParagraphTwoEndFontStyle behavior="Define" />
          <ParagraphTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphTwoSuffix>
          <MarginNumeralSystem>Arabic</MarginNumeralSystem>
          <MarginUseNumeralSystemOfReference>true</MarginUseNumeralSystemOfReference>
          <MarginMultiNumberingStyle>FullRange</MarginMultiNumberingStyle>
          <MarginMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </MarginMultiPrefix>
          <MarginMultiStartFontStyle behavior="Define" />
          <MarginMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </MarginMultiSeparator>
          <MarginMultiEndFontStyle behavior="Define" />
          <MarginMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginMultiSuffix>
          <MarginOneHasSpecialFormat>false</MarginOneHasSpecialFormat>
          <MarginOneNumberingStyle>FullRange</MarginOneNumberingStyle>
          <MarginOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </MarginOnePrefix>
          <MarginOneStartFontStyle behavior="Define" />
          <MarginOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginOneSeparator>
          <MarginOneEndFontStyle behavior="Define" />
          <MarginOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginOneSuffix>
          <MarginTwoHasSpecialFormat>false</MarginTwoHasSpecialFormat>
          <MarginTwoNumberingStyle>FullRange</MarginTwoNumberingStyle>
          <MarginTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </MarginTwoPrefix>
          <MarginTwoStartFontStyle behavior="Define" />
          <MarginTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginTwoSeparator>
          <MarginTwoEndFontStyle behavior="Define" />
          <MarginTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginTwoSuffix>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="aa9d0f66-c150-4c76-aa07-3f76f6314816">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>ParallelTitle</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="947934e2-3b66-4dfc-aad4-2f1ccf2bb9c6">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>, {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PlaceOfPublicationFieldElement">
          <ReferencePropertyId>PlaceOfPublication</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Abbreviate>false</Abbreviate>
          <AbbreviateIfMoreThanPlaces>5</AbbreviateIfMoreThanPlaces>
          <AbbreviateUpToPlace>4</AbbreviateUpToPlace>
          <Abbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, et al.</Text>
          </Abbreviation>
          <Separator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text> </Text>
          </Separator>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="3ed35ccc-44fd-4e74-969c-dd4b1f35080f">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Price</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="b57eebd2-a811-4497-bd12-89ecf1d7fca5">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>. {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Publishers</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="a70a5c15-6d54-4718-98b0-7bc25032b320">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="QuotationPageRangeFieldElement">
          <ReferencePropertyId>QuotationPageRange</ReferencePropertyId>
          <Required>false</Required>
          <ColumnNumeralSystem>Arabic</ColumnNumeralSystem>
          <ColumnUseNumeralSystemOfReference>true</ColumnUseNumeralSystemOfReference>
          <ColumnMultiNumberingStyle>FullRange</ColumnMultiNumberingStyle>
          <ColumnMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ColumnMultiPrefix>
          <ColumnMultiStartFontStyle behavior="Define" />
          <ColumnMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </ColumnMultiSeparator>
          <ColumnMultiEndFontStyle behavior="SameAsPrevious" />
          <ColumnMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnMultiSuffix>
          <ColumnOneHasSpecialFormat>false</ColumnOneHasSpecialFormat>
          <ColumnOneNumberingStyle>StartPageOnly</ColumnOneNumberingStyle>
          <ColumnOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ColumnOnePrefix>
          <ColumnOneStartFontStyle behavior="Define" />
          <ColumnOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnOneSeparator>
          <ColumnOneEndFontStyle behavior="Define" />
          <ColumnOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnOneSuffix>
          <ColumnTwoHasSpecialFormat>false</ColumnTwoHasSpecialFormat>
          <ColumnTwoNumberingStyle>FullRange</ColumnTwoNumberingStyle>
          <ColumnTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ColumnTwoPrefix>
          <ColumnTwoStartFontStyle behavior="Define" />
          <ColumnTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnTwoSeparator>
          <ColumnTwoEndFontStyle behavior="Define" />
          <ColumnTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ColumnTwoSuffix>
          <OtherNumeralSystem>Arabic</OtherNumeralSystem>
          <OtherUseNumeralSystemOfReference>true</OtherUseNumeralSystemOfReference>
          <OtherMultiNumberingStyle>FullRange</OtherMultiNumberingStyle>
          <OtherMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OtherMultiPrefix>
          <OtherMultiStartFontStyle behavior="Define" />
          <OtherMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </OtherMultiSeparator>
          <OtherMultiEndFontStyle behavior="SameAsPrevious" />
          <OtherMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherMultiSuffix>
          <OtherOneHasSpecialFormat>false</OtherOneHasSpecialFormat>
          <OtherOneNumberingStyle>StartPageOnly</OtherOneNumberingStyle>
          <OtherOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OtherOnePrefix>
          <OtherOneStartFontStyle behavior="Define" />
          <OtherOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherOneSeparator>
          <OtherOneEndFontStyle behavior="Define" />
          <OtherOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherOneSuffix>
          <OtherTwoHasSpecialFormat>false</OtherTwoHasSpecialFormat>
          <OtherTwoNumberingStyle>FullRange</OtherTwoNumberingStyle>
          <OtherTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OtherTwoPrefix>
          <OtherTwoStartFontStyle behavior="Define" />
          <OtherTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherTwoSeparator>
          <OtherTwoEndFontStyle behavior="Define" />
          <OtherTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OtherTwoSuffix>
          <PageNumeralSystem>Arabic</PageNumeralSystem>
          <PageUseNumeralSystemOfReference>true</PageUseNumeralSystemOfReference>
          <PageMultiNumberingStyle>FullRange</PageMultiNumberingStyle>
          <PageMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </PageMultiPrefix>
          <PageMultiStartFontStyle behavior="Define" />
          <PageMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </PageMultiSeparator>
          <PageMultiEndFontStyle behavior="SameAsPrevious" />
          <PageMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageMultiSuffix>
          <PageOneHasSpecialFormat>false</PageOneHasSpecialFormat>
          <PageOneNumberingStyle>StartPageOnly</PageOneNumberingStyle>
          <PageOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </PageOnePrefix>
          <PageOneStartFontStyle behavior="Define" />
          <PageOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageOneSeparator>
          <PageOneEndFontStyle behavior="Define" />
          <PageOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageOneSuffix>
          <PageTwoHasSpecialFormat>false</PageTwoHasSpecialFormat>
          <PageTwoNumberingStyle>FullRange</PageTwoNumberingStyle>
          <PageTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </PageTwoPrefix>
          <PageTwoStartFontStyle behavior="Define" />
          <PageTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageTwoSeparator>
          <PageTwoEndFontStyle behavior="Define" />
          <PageTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </PageTwoSuffix>
          <ParagraphNumeralSystem>Arabic</ParagraphNumeralSystem>
          <ParagraphUseNumeralSystemOfReference>true</ParagraphUseNumeralSystemOfReference>
          <ParagraphMultiNumberingStyle>FullRange</ParagraphMultiNumberingStyle>
          <ParagraphMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ParagraphMultiPrefix>
          <ParagraphMultiStartFontStyle behavior="Define" />
          <ParagraphMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </ParagraphMultiSeparator>
          <ParagraphMultiEndFontStyle behavior="SameAsPrevious" />
          <ParagraphMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphMultiSuffix>
          <ParagraphOneHasSpecialFormat>false</ParagraphOneHasSpecialFormat>
          <ParagraphOneNumberingStyle>StartPageOnly</ParagraphOneNumberingStyle>
          <ParagraphOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ParagraphOnePrefix>
          <ParagraphOneStartFontStyle behavior="Define" />
          <ParagraphOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphOneSeparator>
          <ParagraphOneEndFontStyle behavior="Define" />
          <ParagraphOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphOneSuffix>
          <ParagraphTwoHasSpecialFormat>false</ParagraphTwoHasSpecialFormat>
          <ParagraphTwoNumberingStyle>FullRange</ParagraphTwoNumberingStyle>
          <ParagraphTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </ParagraphTwoPrefix>
          <ParagraphTwoStartFontStyle behavior="Define" />
          <ParagraphTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphTwoSeparator>
          <ParagraphTwoEndFontStyle behavior="Define" />
          <ParagraphTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </ParagraphTwoSuffix>
          <MarginNumeralSystem>Arabic</MarginNumeralSystem>
          <MarginUseNumeralSystemOfReference>true</MarginUseNumeralSystemOfReference>
          <MarginMultiNumberingStyle>FullRange</MarginMultiNumberingStyle>
          <MarginMultiPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </MarginMultiPrefix>
          <MarginMultiStartFontStyle behavior="Define" />
          <MarginMultiSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>–</Text>
          </MarginMultiSeparator>
          <MarginMultiEndFontStyle behavior="Define" />
          <MarginMultiSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginMultiSuffix>
          <MarginOneHasSpecialFormat>false</MarginOneHasSpecialFormat>
          <MarginOneNumberingStyle>FullRange</MarginOneNumberingStyle>
          <MarginOnePrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </MarginOnePrefix>
          <MarginOneStartFontStyle behavior="Define" />
          <MarginOneSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginOneSeparator>
          <MarginOneEndFontStyle behavior="Define" />
          <MarginOneSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginOneSuffix>
          <MarginTwoHasSpecialFormat>false</MarginTwoHasSpecialFormat>
          <MarginTwoNumberingStyle>FullRange</MarginTwoNumberingStyle>
          <MarginTwoPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </MarginTwoPrefix>
          <MarginTwoStartFontStyle behavior="Define" />
          <MarginTwoSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginTwoSeparator>
          <MarginTwoEndFontStyle behavior="Define" />
          <MarginTwoSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </MarginTwoSuffix>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="d401edca-18cf-443d-b5b2-1ee620e003b1">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>TextLinks</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="b797c381-b0a8-48a9-84d5-23e25efddd6b">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SequenceNumber</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="236f2593-c049-45af-abfc-b0d812584aba">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="SeriesTitleFieldElement">
          <ReferencePropertyId>SeriesTitle</ReferencePropertyId>
          <Required>false</Required>
          <Fallback>true</Fallback>
          <FontStyle behavior="Define" />
          <SeriesTitleNameUsage>Name</SeriesTitleNameUsage>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="34377ffc-0565-4fb1-b28d-5ca6296b76e8">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>SeriesTitleEditors</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameFirstName</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>Full</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>Full</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>false</Abbreviate>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="SameAsPrevious" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>, </Text>
          </NameSuffixesSeparator>
          <OrganizationNameOrder>NameAbbreviation</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="51bc87be-e989-4ad8-94fb-fc74e986599e">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>ShortTitle</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="7ca46a16-e5bf-4f3b-8aeb-3ae445708ff4">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SpecificField1</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="9f6c52a1-9c2b-476c-92ed-6c370d78de56">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SpecificField2</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="df5fc7c8-2d38-4350-95ab-1bfc61b6d2a4">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SpecificField3</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="979d133d-4f48-41b1-9de7-72781b0fe169">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <FilterCode><![CDATA[// #C5_43141
//Version 1.0

using System.Linq;
using System.Globalization;
using System.Collections.Generic;
using SwissAcademic.Citavi;
using SwissAcademic.Citavi.Metadata;
using SwissAcademic.Collections;
using SwissAcademic.Drawing;
using System;


namespace SwissAcademic.Citavi.Citations
{
	public class ComponentPartFilter
		:
		IComponentPartFilter
	{

		//Format date range (if applicable)
		//Enter date range as: dd.MM.yyyy - dd.MM.yyyy
		//Format it to MMM. dd-dd, yyyy e.g.

		public IEnumerable<ITextUnit> GetTextUnits(ComponentPart componentPart, Template template, Citation citation, out bool handled)
		{
			CultureInfo targetCulture = CultureInfo.CreateSpecificCulture("en-US");

			handled = false;

			if (citation == null) return null;
			if (citation.Reference == null) return null;

			if (componentPart == null) return null;
			if (componentPart.Elements == null || componentPart.Elements.Count != 1) return null;

			var dateTimeFieldElement = componentPart.Elements[0] as DateTimeFieldElement;
			if (dateTimeFieldElement == null) return null;


			Reference referenceResolved = componentPart.Scope == ComponentPartScope.ParentReference ? citation.Reference.ParentReference : citation.Reference;
			if (referenceResolved == null) return null;

			string date = referenceResolved.Date;
			if (string.IsNullOrEmpty(date)) return null;


			DateTime dateSingle;
			DateTime dateA;
			DateTime dateB;

			CultureInfo deDE = new CultureInfo("de-DE");
			string[] formats = new string[] { "dd.MM.yyyy", "d.M.yyyy", "d.MM.yyyy", "dd.M.yyyy", "dd.MM.yy", "d.M.yy", "d.MM.yy", "dd.M.yy" };


			//try single date first
			var found = DateTime.TryParseExact(date, formats, deDE, DateTimeStyles.None, out dateSingle);

			if (found)
			{
				var monthStringShort = dateSingle.ToString("MMM", targetCulture);
				var monthStringLong = dateSingle.ToString("MMMM", targetCulture);
				var monthString = monthStringShort == monthStringLong ? monthStringShort : monthStringShort + ".";

				var yearString = dateSingle.ToString("yyyy");

				var dayString = dateSingle.Day.ToString("D2");

				var outputFormatSingle = "{0} {1}, {2}";
				var dateSingleText = string.Format(outputFormatSingle, monthString, dayString, yearString);

				var outputSingleDate = new TextUnitCollection();
				var textSingleDate = new LiteralTextUnit(dateSingleText);
				textSingleDate.FontStyle = dateTimeFieldElement.FontStyle;
				outputSingleDate.Add(textSingleDate);
				handled = true;
				return outputSingleDate;

			}

			//then try date range
			List<string> dates = date.Split('-').Select(d => d.Trim()).ToList();
			if (dates.Count != 2) return null;


			var foundA = DateTime.TryParseExact(dates.ElementAt(0), formats, deDE, DateTimeStyles.None, out dateA);
			var foundB = DateTime.TryParseExact(dates.ElementAt(1), formats, deDE, DateTimeStyles.None, out dateB);

			if (!foundA || !foundB) return null;


			var monthAStringShort = dateA.ToString("MMM", targetCulture);
			var monthAStringLong = dateA.ToString("MMMM", targetCulture);
			var monthAString = monthAStringShort == monthAStringLong ? monthAStringShort : monthAStringShort + ".";

			var monthBStringShort = dateB.ToString("MMM", targetCulture);
			var monthBStringLong = dateB.ToString("MMMM", targetCulture);
			var monthBString = monthBStringShort == monthBStringLong ? monthBStringShort : monthBStringShort + ".";

			var yearAString = dateA.ToString("yyyy");
			var yearBString = dateB.ToString("yyyy");

			var dayAString = dateA.Day.ToString("D2");
			var dayBString = dateB.Day.ToString("D2");

			string outputFormat = string.Empty;
			string dateRangeText = string.Empty;

			//same year, same month
			if (dateA.Year == dateB.Year && dateA.Month == dateB.Month && dateA.Day != dateB.Day)
			{
				outputFormat = "{0}-{1} {2} {3}"; //e.g. Sep. 08-11, 2013
				dateRangeText = string.Format(outputFormat, dayAString, dayBString, monthAStringLong, yearAString);
			}


			//same year, different months
			else if (dateA.Year == dateB.Year && dateA.Month != dateB.Month)
			{
				outputFormat = "{0} {1}-{2} {3} {4}"; //e.g. Sep. 27 - Oct. 04, 2013
				dateRangeText = string.Format(outputFormat, dayAString, monthAString, dayBString, monthBString, yearAString);
			}

			//different years
			else
			{
				outputFormat = "{0} {1}, {2} - {3} {4}, {5}"; //e.g. Dec. 27, 2013 - Jan. 04, 2014
				dateRangeText = string.Format(outputFormat, monthAString, dayAString, yearAString, monthBString, dayBString, yearBString);
			}

			var output = new TextUnitCollection();
			var text = new LiteralTextUnit(dateRangeText);
			text.FontStyle = dateTimeFieldElement.FontStyle;
			output.Add(text);
			handled = true;
			return output;
		}
	}
}]]></FilterCode>
      <IsFilterActivated>true</IsFilterActivated>
      <FilterName />
      <FilterNotes><![CDATA[Format date range]]></FilterNotes>
      <Name>, {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>.</Text>
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SpecificField4</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="2b41c296-5c9b-4809-bcac-3376c440e8e6">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SpecificField5</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="956b0dac-e2db-4368-869e-430b3c8ffc69">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SpecificField6</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="bdcd817c-2937-42e2-92a2-227a8e2b60f2">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>. Presented at: {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>NextElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>Presented at: </Text>
        </Element>
        <Element type="TextFieldElement">
          <ReferencePropertyId>SpecificField7</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define">
            <AllCaps>false</AllCaps>
            <Bold>false</Bold>
            <DoubleUnderline>false</DoubleUnderline>
            <Italic>true</Italic>
            <SmallCaps>false</SmallCaps>
            <StrikeThrough>false</StrikeThrough>
            <Subscript>false</Subscript>
            <Superscript>false</Superscript>
            <Underline>false</Underline>
          </FontStyle>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="df689131-43b0-488d-9b31-7d9daffc2f45">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>StorageMedium</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="d6331607-e8aa-420a-9e7b-8593b8357154">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Tasks</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="01f13fbf-c8dc-4227-99ad-6b2e11e0a657">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <FilterCode><![CDATA[//#431516
//Version 1.8
//Capitalize first letter of simple text field elements (such as Title or Subtitle etc)

using System.Collections.Generic;
using System.Globalization;
using System.Text.RegularExpressions;
using SwissAcademic.Citavi;
using System;
using System.Linq;

namespace SwissAcademic.Citavi.Citations
{
	public class ComponentPartFilter
		:
		IComponentPartFilter
	{
		public IEnumerable<ITextUnit> GetTextUnits(ComponentPart componentPart, Template template, Citation citation, out bool handled)
		{
			//Name of filter: Convert output to title case (with exceptions, such as "and", "or" etc.)
			//Version 1.8: Parametrized conversion of full upper case words; functionality was impaired in version 1.7
			//Version 1.7: Added checking for null on GetTextUnitsUnfiltered() to avoid NullReferenceExceptions at runtime (which may lead to auto-deactivation of filter)
			//Version 1.6: ToUpperFirstLetter() method now handles words completely in UPPERCASE and takes culture into consideration
			//Version 1.5: capitalize stopwords directly after quotation mark
			//Version 1.4: improved word tokenization
			//Version 1.3: ignore expressions which are written completely in upper case
			//Version 1.2: new option to ensure that the reference language is "English"

			var ensureEnglishIsReferenceLanguage = true;	//if set to false, the component part filter will ALWAYS capitalize, regardless of the reference's language
			var convertFullUpperCaseWords = ConvertFullUpperCaseWords.Never;
			
			#region Info on ConvertFullUpperCaseWords parameter
			/*
				Example 1: UN and US government made agreement on payments of contribution
				Example 2: UN AND US GOVERNMENT MADE AGREEMENT ON PAYMENTS OF CONTRIBUTION

				ConvertFullUpperCaseWords.Never (default)
				Result 1: UN and US Government Made Agreement on Payments of Contribution
				Result 2: UN and US GOVERNMENT MADE AGREEMENT on PAYMENTS of CONTRIBUTION

				ConvertFullUpperCaseWords.Always: 
				Result 1: Un and Us Government Made Agreement on Payments of Contribution
				Result 2: Un and Us Government Made Agreement on Payments of Contribution

				ConvertFullUpperCaseWords.Auto:
				Result 1: UN and US Government Made Agreement on Payments of Contribution
				Result 2: Un and Us Government Made Agreement on Payments of Contribution
			*/
			#endregion 

			CultureInfo culture = CultureInfo.CurrentCulture;
			
			handled = false;

			if (citation == null) return null;
			if (citation.Reference == null) return null;

			if (componentPart == null) return null;
			if (template == null) return null;

			if (ensureEnglishIsReferenceLanguage)
			{
				if (string.IsNullOrEmpty(citation.Reference.Language)) return null;

				var termsList = new string[] {
					"en",
					"eng",
					"engl",
					"English",
					"Englisch"
				};

				var regEx = new Regex(@"\b(" + string.Join("|", termsList) + @")\b", RegexOptions.IgnoreCase);
				if (!regEx.IsMatch(citation.Reference.Language))
				{
					return null;
				}
			}

			//Words that will not be capitalized; add words to this list as required
        	string[] exceptionsArray = { "a", "an", "and", "as", "at",
										 "but", "by", "down", "for", "from",
										 "in", "into", "nor",
										 "of", "on", "onto", "or", "over",
										 "so", "the", "till", "to",
										 "up", "via", "with", "yet" };

			List<string> exceptions = new List<string>(exceptionsArray);

			var textUnits = componentPart.GetTextUnitsUnfiltered(citation, template);
			if (textUnits == null || !textUnits.Any()) return null;
			
			string fullString = textUnits.ToString();
			bool fullUpperCaseTreatment = false;
			switch (convertFullUpperCaseWords)
			{
				case ConvertFullUpperCaseWords.Always:
					fullUpperCaseTreatment = true;
					break;
					
				case ConvertFullUpperCaseWords.Never:
				{
					fullUpperCaseTreatment = false;
				}
				break;
					
				default:
				case ConvertFullUpperCaseWords.Auto:
				{
					if (HasLowerCase(fullString))
					{
						fullUpperCaseTreatment = false;
					}
					else
					{
						fullUpperCaseTreatment = true;
					}	
				}
				break;
			}

			string prevWord = string.Empty;

			for (int i = 0; i < textUnits.Count; i++)
			{
				//textUnit.Text = textUnits[i].Text.ToLower(culture);
				var text = textUnits[i].Text;

				//Break the input text into a list of words at whitespaces,
				//hyphens, opening parens, and ASCII quotation marks
				string splitPattern = @"(\s)|(-)|(\()|(\"")";
				List<string> words = new List<string>(Regex.Split(text, splitPattern));
							
				var counter = 0;
				text = string.Empty;				
				
				//Check each remaining word against the list, and append it to the new text. 
				//Leave words in upper case unchanged, unless they appear in the exception list.
				foreach (string word in words)
		        {					
	                counter++;
	                if (counter == 1) // first word in a textunit
	                {
	                 	if (i == 0) text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);  // first word overall => capitalize
						else if ((String.IsNullOrWhiteSpace(prevWord)) && !(exceptions.Contains(word.ToLower(culture)))) text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);  // new textunit after space and not stopword => capitalize
						else text = text + word; // in all other cases: do nothing 						           
	                }
	                else if (prevWord == @"""") // capitalize also stopwords directly after quotation marks
	                {
	                    text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);
	                }
	                else if (exceptions.Contains(word.ToLower(culture))) // check list of exceptions
	                {
	                    text = text + word.ToLower(culture);
	                }
	                else // in all other cases: capitalize
	                {
	                    text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);
	                }
					prevWord = word; // save current word as previous word for next iteration
				}				
				textUnits[i].Text = text;
			}
			
			handled = true;
			return textUnits;
		}

		
		public string ToUpperFirstLetter(string input, bool ensureAllButFirstIsLower = false, CultureInfo culture = null)
		{
			if (string.IsNullOrEmpty(input)) return input;

			char[] letters = input.ToCharArray();
			
			for (var i = 0; i < letters.Length; i++)
			{
				if (i == 0) 
				{
					letters[0] = char.ToUpper(letters[0], culture);
					continue;
				}
				
				if (i > 0 && ensureAllButFirstIsLower == false) break;
				letters[i] = char.ToLower(letters[i], culture);
			}

			return new string(letters);
		}

		public enum ConvertFullUpperCaseWords
		{
			Never,
			Always,
			Auto		//converts full uppercase words to lower case only if the conmplete text is written in uppercase
		};
		
		public bool HasLowerCase (string input) 
		{
		    return !string.IsNullOrEmpty(input) && input.Any(c => char.IsLower(c));
		}
	}
}]]></FilterCode>
      <IsFilterActivated>true</IsFilterActivated>
      <FilterName>Title_ToTitleCase</FilterName>
      <FilterNotes />
      <Name>. {0} [italic]</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Title</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define">
            <AllCaps>false</AllCaps>
            <Bold>false</Bold>
            <DoubleUnderline>false</DoubleUnderline>
            <Italic>true</Italic>
            <SmallCaps>false</SmallCaps>
            <StrikeThrough>false</StrikeThrough>
            <Subscript>false</Subscript>
            <Superscript>false</Superscript>
            <Underline>false</Underline>
          </FontStyle>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="21d29702-5199-40c2-a54a-399d758c339d">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>: {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>: </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Subtitle</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="5a9f34bf-ec2f-4f16-8e2e-b8fd5adf18ad">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>TitleInOtherLanguages</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="f378fb76-1d83-4748-875e-c865e01f3d45">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>. {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>TitleSupplement</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="85c3fe47-58b3-483c-b563-54747ac16b6f">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>TableOfContents</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="eed5434c-60fa-4e0c-8b2c-7b87c4a296d9">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="CitationKeyFieldElement">
          <ReferencePropertyId>CitationKey</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <UseTitleIfCitationKeyIsMissing>false</UseTitleIfCitationKeyIsMissing>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="04d909ce-d919-4fc6-acf7-212d9ca4b716">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>TranslatedTitle</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="9357d6c4-4409-43fc-b764-fa2c9b065308">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>UniformTitle</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="6584296e-9c69-4ecb-86e5-d1779cbe66ab">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>{0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="NumericFieldElement">
          <ReferencePropertyId>Volume</ReferencePropertyId>
          <Required>false</Required>
          <DefaultNumericAbbreviation type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>th</Text>
          </DefaultNumericAbbreviation>
          <FontStyle behavior="Define" />
          <PluralPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PluralPrefix>
          <PluralSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </PluralSuffix>
          <SingularPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </SingularPrefix>
          <SingularSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </SingularSuffix>
          <SpecialNumericAbbreviations type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>1|st|2|nd|3|rd</Text>
          </SpecialNumericAbbreviations>
          <TextPrefix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </TextPrefix>
          <TextSuffix type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text />
          </TextSuffix>
          <UseNumericAbbreviations>false</UseNumericAbbreviations>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="06a041a0-1ac8-4885-a40d-eaf88eae805a">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>_({0})</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text>.</Text>
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text> </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>NextElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>(</Text>
        </Element>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>YearResolved</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>D</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>im Druck</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>true</ReplaceInPrintPlaceholder>
          <UseFormat>false</UseFormat>
        </Element>
        <Element type="LiteralElement">
          <ApplyCondition>PreviousElementHasData</ApplyCondition>
          <FontStyle behavior="Define" />
          <Text>)</Text>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="cc82fde8-9d46-4a79-a3d9-1ecba2dab8c8">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <Name>In: {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>. </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="LiteralElement">
          <ApplyCondition>Always</ApplyCondition>
          <FontStyle behavior="SameAsPrevious" />
          <Text>In: </Text>
        </Element>
        <Element type="PersonFieldElement">
          <ReferencePropertyId>Editors</ReferencePropertyId>
          <Required>false</Required>
          <FirstGroupLength>-1</FirstGroupLength>
          <FirstGroupPersonNameOrder>LastNameFirstName</FirstGroupPersonNameOrder>
          <FirstGroupLastNameFontStyle behavior="Define" />
          <FirstGroupFirstNameFormat>Full</FirstGroupFirstNameFormat>
          <FirstGroupMiddleNameFormat>Full</FirstGroupMiddleNameFormat>
          <FirstGroupMiddleNameUsage>All</FirstGroupMiddleNameUsage>
          <FirstGroupFirstAndMiddleNameFontStyle behavior="Define" />
          <FirstGroupPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupPersonSeparator>
          <FirstGroupLastPersonSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastPersonSeparator>
          <FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>false</FirstGroupUseNonBreakingSpaceBetweenLastAndFirstName>
          <FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>false</FirstGroupUseNonBreakingSpaceInAndBetweenFirstAndMiddleNames>
          <FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>false</FirstGroupUseNonBreakingSpaceBetweenPrefixAndName>
          <FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>false</FirstGroupUseNonBreakingHyphenInFirstAndMiddleNames>
          <FirstGroupLastNameFirstNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </FirstGroupLastNameFirstNameSeparator>
          <FirstGroupFirstNameLastNameSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNameLastNameSeparator>
          <FirstGroupFirstNamesMiddleNamesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text> </Text>
          </FirstGroupFirstNamesMiddleNamesSeparator>
          <FirstGroupFirstNamesMiddleNamesAbbreviator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>.</Text>
          </FirstGroupFirstNamesMiddleNamesAbbreviator>
          <UseDifferentFormatForLastPerson>false</UseDifferentFormatForLastPerson>
          <UseDifferentLastPersonSeparatorIfExactlyTwoPersons>false</UseDifferentLastPersonSeparatorIfExactlyTwoPersons>
          <Abbreviate>false</Abbreviate>
          <AbbreviateNamePrefixes>false</AbbreviateNamePrefixes>
          <NamePrefixesFontStyle behavior="Define" />
          <NamePrefixAbbreviations />
          <SuppressNameSuffixes>false</SuppressNameSuffixes>
          <NameSuffixesFontStyle behavior="Define" />
          <NameSuffixesSeparator type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>, </Text>
          </NameSuffixesSeparator>
          <OrganizationNameOrder>NameAbbreviation</OrganizationNameOrder>
          <OrganizationTextBeforeName type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text />
          </OrganizationTextBeforeName>
          <OrganizationTextBeforeNameApplyCondition>AttributeHasData</OrganizationTextBeforeNameApplyCondition>
          <OrganizationNameFontStyle behavior="Define" />
          <OrganizationTextAfterName type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text />
          </OrganizationTextAfterName>
          <OrganizationTextAfterNameApplyCondition>AttributeHasData</OrganizationTextAfterNameApplyCondition>
          <OrganizationTextBeforeAbbreviation type="LiteralElement">
            <ApplyCondition>NextElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsNext" />
            <Text> (</Text>
          </OrganizationTextBeforeAbbreviation>
          <OrganizationTextBeforeAbbreviationApplyCondition>AttributeHasData</OrganizationTextBeforeAbbreviationApplyCondition>
          <OrganizationAbbreviationFontStyle behavior="Define" />
          <OrganizationTextAfterAbbreviation type="LiteralElement">
            <ApplyCondition>PreviousElementHasData</ApplyCondition>
            <FontStyle behavior="SameAsPrevious" />
            <Text>)</Text>
          </OrganizationTextAfterAbbreviation>
          <OrganizationTextAfterAbbreviationApplyCondition>AttributeHasData</OrganizationTextAfterAbbreviationApplyCondition>
          <SubsequentRepetitionOutputActivated>false</SubsequentRepetitionOutputActivated>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="18d34b8f-9ab2-47d8-b92f-5429dce11f45">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <FilterCode><![CDATA[// #C5_43141
//Version 1.0

using System.Linq;
using System.Globalization;
using System.Collections.Generic;
using SwissAcademic.Citavi;
using SwissAcademic.Citavi.Metadata;
using SwissAcademic.Collections;
using SwissAcademic.Drawing;
using System;


namespace SwissAcademic.Citavi.Citations
{
	public class ComponentPartFilter
		:
		IComponentPartFilter
	{

		//Format date range (if applicable)
		//Enter date range as: dd.MM.yyyy - dd.MM.yyyy
		//Format it to MMM. dd-dd, yyyy e.g.

		public IEnumerable<ITextUnit> GetTextUnits(ComponentPart componentPart, Template template, Citation citation, out bool handled)
		{
			CultureInfo targetCulture = CultureInfo.CreateSpecificCulture("en-US");

			handled = false;

			if (citation == null) return null;
			if (citation.Reference == null) return null;

			if (componentPart == null) return null;
			if (componentPart.Elements == null || componentPart.Elements.Count != 1) return null;

			var dateTimeFieldElement = componentPart.Elements[0] as DateTimeFieldElement;
			if (dateTimeFieldElement == null) return null;


			Reference referenceResolved = componentPart.Scope == ComponentPartScope.ParentReference ? citation.Reference.ParentReference : citation.Reference;
			if (referenceResolved == null) return null;

			string date = referenceResolved.Date;
			if (string.IsNullOrEmpty(date)) return null;


			DateTime dateSingle;
			DateTime dateA;
			DateTime dateB;

			CultureInfo deDE = new CultureInfo("de-DE");
			string[] formats = new string[] { "dd.MM.yyyy", "d.M.yyyy", "d.MM.yyyy", "dd.M.yyyy", "dd.MM.yy", "d.M.yy", "d.MM.yy", "dd.M.yy" };


			//try single date first
			var found = DateTime.TryParseExact(date, formats, deDE, DateTimeStyles.None, out dateSingle);

			if (found)
			{
				var monthStringShort = dateSingle.ToString("MMM", targetCulture);
				var monthStringLong = dateSingle.ToString("MMMM", targetCulture);
				var monthString = monthStringShort == monthStringLong ? monthStringShort : monthStringShort + ".";

				var yearString = dateSingle.ToString("yyyy");

				var dayString = dateSingle.Day.ToString("D2");

				var outputFormatSingle = "{0} {1}, {2}";
				var dateSingleText = string.Format(outputFormatSingle, monthString, dayString, yearString);

				var outputSingleDate = new TextUnitCollection();
				var textSingleDate = new LiteralTextUnit(dateSingleText);
				textSingleDate.FontStyle = dateTimeFieldElement.FontStyle;
				outputSingleDate.Add(textSingleDate);
				handled = true;
				return outputSingleDate;

			}

			//then try date range
			List<string> dates = date.Split('-').Select(d => d.Trim()).ToList();
			if (dates.Count != 2) return null;


			var foundA = DateTime.TryParseExact(dates.ElementAt(0), formats, deDE, DateTimeStyles.None, out dateA);
			var foundB = DateTime.TryParseExact(dates.ElementAt(1), formats, deDE, DateTimeStyles.None, out dateB);

			if (!foundA || !foundB) return null;


			var monthAStringShort = dateA.ToString("MMM", targetCulture);
			var monthAStringLong = dateA.ToString("MMMM", targetCulture);
			var monthAString = monthAStringShort == monthAStringLong ? monthAStringShort : monthAStringShort + ".";

			var monthBStringShort = dateB.ToString("MMM", targetCulture);
			var monthBStringLong = dateB.ToString("MMMM", targetCulture);
			var monthBString = monthBStringShort == monthBStringLong ? monthBStringShort : monthBStringShort + ".";

			var yearAString = dateA.ToString("yyyy");
			var yearBString = dateB.ToString("yyyy");

			var dayAString = dateA.Day.ToString("D2");
			var dayBString = dateB.Day.ToString("D2");

			string outputFormat = string.Empty;
			string dateRangeText = string.Empty;

			//same year, same month
			if (dateA.Year == dateB.Year && dateA.Month == dateB.Month && dateA.Day != dateB.Day)
			{
				outputFormat = "{0} {1}-{2}, {3}"; //e.g. Sep. 08-11, 2013
				dateRangeText = string.Format(outputFormat, monthAString, dayAString, dayBString, yearAString);
			}


			//same year, different months
			else if (dateA.Year == dateB.Year && dateA.Month != dateB.Month)
			{
				outputFormat = "{0} {1} - {2} {3}, {4}"; //e.g. Sep. 27 - Oct. 04, 2013
				dateRangeText = string.Format(outputFormat, monthAString, dayAString, monthBString, dayBString, yearAString);
			}

			//different years
			else
			{
				outputFormat = "{0} {1}, {2} - {3} {4}, {5}"; //e.g. Dec. 27, 2013 - Jan. 04, 2014
				dateRangeText = string.Format(outputFormat, monthAString, dayAString, yearAString, monthBString, dayBString, yearBString);
			}

			var output = new TextUnitCollection();
			var text = new LiteralTextUnit(dateRangeText);
			text.FontStyle = dateTimeFieldElement.FontStyle;
			output.Add(text);
			handled = true;
			return output;
		}
	}
}]]></FilterCode>
      <IsFilterActivated>true</IsFilterActivated>
      <FilterName />
      <FilterNotes><![CDATA[format date range]]></FilterNotes>
      <Name>, {0}</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>, </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="DateTimeFieldElement">
          <ReferencePropertyId>YearResolved</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define" />
          <Format>dd MMMM yyyy</Format>
          <InPrintReplacement type="LiteralElement">
            <ApplyCondition>Always</ApplyCondition>
            <FontStyle behavior="Define" />
            <Text>im Druck</Text>
          </InPrintReplacement>
          <ReplaceInPrintPlaceholder>true</ReplaceInPrintPlaceholder>
          <UseFormat>true</UseFormat>
        </Element>
      </Elements>
    </ComponentPart>
    <ComponentPart id="f208c948-487b-424d-8661-f70f5cd5fd09">
      <AllFieldElementsRequired>false</AllFieldElementsRequired>
      <FilterCode><![CDATA[//#431516
//Version 1.8
//Capitalize first letter of simple text field elements (such as Title or Subtitle etc)

using System.Collections.Generic;
using System.Globalization;
using System.Text.RegularExpressions;
using SwissAcademic.Citavi;
using System;
using System.Linq;

namespace SwissAcademic.Citavi.Citations
{
	public class ComponentPartFilter
		:
		IComponentPartFilter
	{
		public IEnumerable<ITextUnit> GetTextUnits(ComponentPart componentPart, Template template, Citation citation, out bool handled)
		{
			//Name of filter: Convert output to title case (with exceptions, such as "and", "or" etc.)
			//Version 1.8: Parametrized conversion of full upper case words; functionality was impaired in version 1.7
			//Version 1.7: Added checking for null on GetTextUnitsUnfiltered() to avoid NullReferenceExceptions at runtime (which may lead to auto-deactivation of filter)
			//Version 1.6: ToUpperFirstLetter() method now handles words completely in UPPERCASE and takes culture into consideration
			//Version 1.5: capitalize stopwords directly after quotation mark
			//Version 1.4: improved word tokenization
			//Version 1.3: ignore expressions which are written completely in upper case
			//Version 1.2: new option to ensure that the reference language is "English"

			var ensureEnglishIsReferenceLanguage = true;	//if set to false, the component part filter will ALWAYS capitalize, regardless of the reference's language
			var convertFullUpperCaseWords = ConvertFullUpperCaseWords.Never;
			
			#region Info on ConvertFullUpperCaseWords parameter
			/*
				Example 1: UN and US government made agreement on payments of contribution
				Example 2: UN AND US GOVERNMENT MADE AGREEMENT ON PAYMENTS OF CONTRIBUTION

				ConvertFullUpperCaseWords.Never (default)
				Result 1: UN and US Government Made Agreement on Payments of Contribution
				Result 2: UN and US GOVERNMENT MADE AGREEMENT on PAYMENTS of CONTRIBUTION

				ConvertFullUpperCaseWords.Always: 
				Result 1: Un and Us Government Made Agreement on Payments of Contribution
				Result 2: Un and Us Government Made Agreement on Payments of Contribution

				ConvertFullUpperCaseWords.Auto:
				Result 1: UN and US Government Made Agreement on Payments of Contribution
				Result 2: Un and Us Government Made Agreement on Payments of Contribution
			*/
			#endregion 

			CultureInfo culture = CultureInfo.CurrentCulture;
			
			handled = false;

			if (citation == null) return null;
			if (citation.Reference == null) return null;

			if (componentPart == null) return null;
			if (template == null) return null;

			if (ensureEnglishIsReferenceLanguage)
			{
				if (string.IsNullOrEmpty(citation.Reference.Language)) return null;

				var termsList = new string[] {
					"en",
					"eng",
					"engl",
					"English",
					"Englisch"
				};

				var regEx = new Regex(@"\b(" + string.Join("|", termsList) + @")\b", RegexOptions.IgnoreCase);
				if (!regEx.IsMatch(citation.Reference.Language))
				{
					return null;
				}
			}

			//Words that will not be capitalized; add words to this list as required
        	string[] exceptionsArray = { "a", "an", "and", "as", "at",
										 "but", "by", "down", "for", "from",
										 "in", "into", "nor",
										 "of", "on", "onto", "or", "over",
										 "so", "the", "till", "to",
										 "up", "via", "with", "yet" };

			List<string> exceptions = new List<string>(exceptionsArray);

			var textUnits = componentPart.GetTextUnitsUnfiltered(citation, template);
			if (textUnits == null || !textUnits.Any()) return null;
			
			string fullString = textUnits.ToString();
			bool fullUpperCaseTreatment = false;
			switch (convertFullUpperCaseWords)
			{
				case ConvertFullUpperCaseWords.Always:
					fullUpperCaseTreatment = true;
					break;
					
				case ConvertFullUpperCaseWords.Never:
				{
					fullUpperCaseTreatment = false;
				}
				break;
					
				default:
				case ConvertFullUpperCaseWords.Auto:
				{
					if (HasLowerCase(fullString))
					{
						fullUpperCaseTreatment = false;
					}
					else
					{
						fullUpperCaseTreatment = true;
					}	
				}
				break;
			}

			string prevWord = string.Empty;

			for (int i = 0; i < textUnits.Count; i++)
			{
				//textUnit.Text = textUnits[i].Text.ToLower(culture);
				var text = textUnits[i].Text;

				//Break the input text into a list of words at whitespaces,
				//hyphens, opening parens, and ASCII quotation marks
				string splitPattern = @"(\s)|(-)|(\()|(\"")";
				List<string> words = new List<string>(Regex.Split(text, splitPattern));
							
				var counter = 0;
				text = string.Empty;				
				
				//Check each remaining word against the list, and append it to the new text. 
				//Leave words in upper case unchanged, unless they appear in the exception list.
				foreach (string word in words)
		        {					
	                counter++;
	                if (counter == 1) // first word in a textunit
	                {
	                 	if (i == 0) text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);  // first word overall => capitalize
						else if ((String.IsNullOrWhiteSpace(prevWord)) && !(exceptions.Contains(word.ToLower(culture)))) text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);  // new textunit after space and not stopword => capitalize
						else text = text + word; // in all other cases: do nothing 						           
	                }
	                else if (prevWord == @"""") // capitalize also stopwords directly after quotation marks
	                {
	                    text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);
	                }
	                else if (exceptions.Contains(word.ToLower(culture))) // check list of exceptions
	                {
	                    text = text + word.ToLower(culture);
	                }
	                else // in all other cases: capitalize
	                {
	                    text = text + ToUpperFirstLetter(word, fullUpperCaseTreatment, culture);
	                }
					prevWord = word; // save current word as previous word for next iteration
				}				
				textUnits[i].Text = text;
			}
			
			handled = true;
			return textUnits;
		}

		
		public string ToUpperFirstLetter(string input, bool ensureAllButFirstIsLower = false, CultureInfo culture = null)
		{
			if (string.IsNullOrEmpty(input)) return input;

			char[] letters = input.ToCharArray();
			
			for (var i = 0; i < letters.Length; i++)
			{
				if (i == 0) 
				{
					letters[0] = char.ToUpper(letters[0], culture);
					continue;
				}
				
				if (i > 0 && ensureAllButFirstIsLower == false) break;
				letters[i] = char.ToLower(letters[i], culture);
			}

			return new string(letters);
		}

		public enum ConvertFullUpperCaseWords
		{
			Never,
			Always,
			Auto		//converts full uppercase words to lower case only if the conmplete text is written in uppercase
		};
		
		public bool HasLowerCase (string input) 
		{
		    return !string.IsNullOrEmpty(input) && input.Any(c => char.IsLower(c));
		}
	}
}]]></FilterCode>
      <IsFilterActivated>true</IsFilterActivated>
      <FilterName>Title_ToTitleCase</FilterName>
      <FilterNotes />
      <Name>: {0} [italic]</Name>
      <Notes />
      <PunctuationAfter type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="SameAsPrevious" />
        <Text />
      </PunctuationAfter>
      <PunctuationBefore type="LiteralElement">
        <ApplyCondition>Always</ApplyCondition>
        <FontStyle behavior="Define" />
        <Text>: </Text>
      </PunctuationBefore>
      <Scope>ParentReference</Scope>
      <ShowInList>true</ShowInList>
      <Elements>
        <Element type="TextFieldElement">
          <ReferencePropertyId>Subtitle</ReferencePropertyId>
          <Required>false</Required>
          <FontStyle behavior="Define">
            <AllCaps>false</AllCaps>
            <Bold>false</Bold>
            <DoubleUnderline>false</DoubleUnderline>
            <Italic>true</Italic>
            <SmallCaps>false</SmallCaps>
            <StrikeThrough>false</StrikeThrough>
            <Subscript>false</Subscript>
            <Superscript>false</Superscript>
            <Underline>false</Underline>
          </FontStyle>
        </Element>
      </Elements>
    </ComponentPart>
  </ParentComponentParts>
  <RuleSets>
    <RuleSet type="Bibliography">
      <AutoIncludeParentReferences>false</AutoIncludeParentReferences>
      <AutoIncludeParentReferencesOnlyIfQuotingMultipleChildren>false</AutoIncludeParentReferencesOnlyIfQuotingMultipleChildren>
      <BibliographyHeading>References</BibliographyHeading>
      <FinalCharacter>.</FinalCharacter>
      <HangingIndentation>397</HangingIndentation>
      <InsertBibliographyHeading>true</InsertBibliographyHeading>
      <ListFormat>OrderedList</ListFormat>
      <OrderedListLeadingText />
      <OrderedListLeadingTextFontStyle behavior="SameAsNext" />
      <OrderedListNumeralSystem>Arabic</OrderedListNumeralSystem>
      <OrderedListMinimumLength>1</OrderedListMinimumLength>
      <OrderedListFillMinimumLengthWith>0</OrderedListFillMinimumLengthWith>
      <OrderedListFontStyle behavior="Define" />
      <OrderedListTrailingText />
      <OrderedListTrailingTextFontStyle behavior="SameAsPrevious" />
      <OrderedListSegregatingText>	</OrderedListSegregatingText>
      <CompositeCitationSeparatingText>; </CompositeCitationSeparatingText>
      <CompositeCitationSeparatingTextFontStyle behavior="Define" />
      <CompositeCitationSeparatingTextReplacesFinalCharacter>true</CompositeCitationSeparatingTextReplacesFinalCharacter>
      <SpacingAfter>40</SpacingAfter>
      <SortOption>OrderOfAppearance</SortOption>
      <SortCustomPropertyIds />
      <CompositeCitationSortOption>OrderOfAppearance</CompositeCitationSortOption>
      <CompositeCitationSortCustomPropertyIds />
      <CompositeCitationNumeralSystem>LetterLowerCase</CompositeCitationNumeralSystem>
      <CompositeCitationNumeralFontStyle behavior="SameAsNext" />
      <CompositeCitationNumeralLeadingText />
      <CompositeCitationNumeralLeadingTextFontStyle behavior="SameAsNext" />
      <CompositeCitationNumeralRepeatIndexNumber>false</CompositeCitationNumeralRepeatIndexNumber>
      <CompositeCitationNumeralRepeatedIndexNumberFontStyle behavior="SameAsPrevious" />
      <CompositeCitationNumeralTextAfterRepeatedIndexNumber />
      <CompositeCitationNumeralTextAfterRepeatedIndexNumberFontStyle behavior="SameAsPrevious" />
      <CompositeCitationNumeralTrailingText>) </CompositeCitationNumeralTrailingText>
      <CompositeCitationNumeralTrailingTextFontStyle behavior="SameAsPrevious" />
      <SuppressBibliography>false</SuppressBibliography>
      <UnorderedListLeadingText>•</UnorderedListLeadingText>
      <UnorderedListSegregatingText>	</UnorderedListSegregatingText>
      <TemplateUseCases>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>JournalArticle</ReferenceTypeId>
          <ShowInGui>true</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="03bda433-0c77-415c-b360-cd9150b5ec92" />
                  <ComponentPart refid="de2d7411-1fad-4c67-9304-452f1c5dbfac" />
                  <ComponentPart refid="dea2ed0e-8675-4e11-a565-4a793b0b7608" />
                  <ComponentPart refid="b4316588-f709-4497-ab76-59f2bca8afd9" />
                  <ComponentPart refid="74fd56dc-5f67-4443-ad0a-7a88b9ada8db" />
                  <ComponentPart refid="04f56958-12cc-456c-8029-4d52fac8e60b" />
                  <ComponentPart refid="7de3982d-c43f-48b4-ae96-12b895f55264" />
                  <ComponentPart refid="3a8a8765-0c11-4ec0-9349-b177f1ae1d07" />
                  <ComponentPart refid="ca30bc4a-7c09-4d64-969b-c087b00f852c" />
                  <ComponentPart refid="21d6af0c-be81-4f24-8cb2-5d9dcd353f80" />
                </ComponentParts>
              </Template>
            </Template>
            <Template type="Conditional">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="03bda433-0c77-415c-b360-cd9150b5ec92" />
                  <ComponentPart refid="de2d7411-1fad-4c67-9304-452f1c5dbfac" />
                  <ComponentPart refid="dea2ed0e-8675-4e11-a565-4a793b0b7608" />
                  <ComponentPart refid="b4316588-f709-4497-ab76-59f2bca8afd9" />
                  <ComponentPart refid="74fd56dc-5f67-4443-ad0a-7a88b9ada8db" />
                  <ComponentPart refid="04f56958-12cc-456c-8029-4d52fac8e60b" />
                  <ComponentPart refid="7de3982d-c43f-48b4-ae96-12b895f55264" />
                  <ComponentPart refid="3a8a8765-0c11-4ec0-9349-b177f1ae1d07" />
                </ComponentParts>
              </Template>
              <Conditions>
                <BuiltInCondition>InPrint</BuiltInCondition>
              </Conditions>
            </Template>
            <Template type="Conditional">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="03bda433-0c77-415c-b360-cd9150b5ec92" />
                  <ComponentPart refid="de2d7411-1fad-4c67-9304-452f1c5dbfac" />
                  <ComponentPart refid="dea2ed0e-8675-4e11-a565-4a793b0b7608" />
                  <ComponentPart refid="b4316588-f709-4497-ab76-59f2bca8afd9" />
                  <ComponentPart refid="74fd56dc-5f67-4443-ad0a-7a88b9ada8db" />
                  <ComponentPart refid="b2d0b5c0-56ab-4a03-af98-3cb18d84e6bb" />
                  <ComponentPart refid="053e935d-1159-4bd8-a864-2a61ccea2084" />
                </ComponentParts>
              </Template>
              <Conditions>
                <BuiltInCondition>VolumeMissing</BuiltInCondition>
                <BuiltInCondition>NumberMissing</BuiltInCondition>
                <BuiltInCondition>DoiAvailable</BuiltInCondition>
              </Conditions>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Book</ReferenceTypeId>
          <ShowInGui>true</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="5e9eafff-ba0e-425e-81e7-a3e765f1baf5" />
                  <ComponentPart refid="c1447ceb-cc5e-4e5f-a3a5-5351074950fb" />
                  <ComponentPart refid="b3848884-7e13-49c4-97d8-1cb10966bc63" />
                  <ComponentPart refid="35f8ea3b-4c17-4e23-b805-49bbeae76d9e" />
                  <ComponentPart refid="79204226-d788-4faf-b603-a9d9904a0e6c" />
                  <ComponentPart refid="61f0c59f-6319-4276-8413-a17b555ae045" />
                  <ComponentPart refid="74fd56dc-5f67-4443-ad0a-7a88b9ada8db" />
                </ComponentParts>
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>BookEdited</ReferenceTypeId>
          <ShowInGui>true</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="949e933d-973a-4647-ad4b-3461a0df387a" />
                  <ComponentPart refid="c1447ceb-cc5e-4e5f-a3a5-5351074950fb" />
                  <ComponentPart refid="b3848884-7e13-49c4-97d8-1cb10966bc63" />
                  <ComponentPart refid="35f8ea3b-4c17-4e23-b805-49bbeae76d9e" />
                  <ComponentPart refid="79204226-d788-4faf-b603-a9d9904a0e6c" />
                  <ComponentPart refid="61f0c59f-6319-4276-8413-a17b555ae045" />
                  <ComponentPart refid="74fd56dc-5f67-4443-ad0a-7a88b9ada8db" />
                </ComponentParts>
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>BookEdited</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>true</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="03bda433-0c77-415c-b360-cd9150b5ec92" />
                  <ComponentPart refid="de2d7411-1fad-4c67-9304-452f1c5dbfac" />
                  <ComponentPart refid="dea2ed0e-8675-4e11-a565-4a793b0b7608" />
                  <ComponentPart refid="1928bd02-ecf8-4a3a-abcf-4c6775beae51" />
                  <ComponentPart refid="01f13fbf-c8dc-4227-99ad-6b2e11e0a657" />
                  <ComponentPart refid="f208c948-487b-424d-8661-f70f5cd5fd09" />
                  <ComponentPart refid="b57eebd2-a811-4497-bd12-89ecf1d7fca5" />
                  <ComponentPart refid="947934e2-3b66-4dfc-aad4-2f1ccf2bb9c6" />
                  <ComponentPart refid="32cdb76c-7aae-428d-9b27-3e2ce694c4c1" />
                  <ComponentPart refid="06a041a0-1ac8-4885-a40d-eaf88eae805a" />
                </ComponentParts>
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>UnpublishedWork</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>CollectedWorks</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>ConferenceProceedings</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>true</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="03bda433-0c77-415c-b360-cd9150b5ec92" />
                  <ComponentPart refid="de2d7411-1fad-4c67-9304-452f1c5dbfac" />
                  <ComponentPart refid="dea2ed0e-8675-4e11-a565-4a793b0b7608" />
                  <ComponentPart refid="01f13fbf-c8dc-4227-99ad-6b2e11e0a657" />
                  <ComponentPart refid="bdcd817c-2937-42e2-92a2-227a8e2b60f2" />
                  <ComponentPart refid="7ca46a16-e5bf-4f3b-8aeb-3ae445708ff4" />
                  <ComponentPart refid="979d133d-4f48-41b1-9de7-72781b0fe169" />
                </ComponentParts>
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>SpecialIssue</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>InternetDocument</ReferenceTypeId>
          <ShowInGui>true</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="5e9eafff-ba0e-425e-81e7-a3e765f1baf5" />
                  <ComponentPart refid="de2d7411-1fad-4c67-9304-452f1c5dbfac" />
                  <ComponentPart refid="dea2ed0e-8675-4e11-a565-4a793b0b7608" />
                  <ComponentPart refid="ca30bc4a-7c09-4d64-969b-c087b00f852c" />
                  <ComponentPart refid="dfaf4d88-ae3a-4f0a-8f31-b468619fbd1b" />
                </ComponentParts>
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Thesis</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="03bda433-0c77-415c-b360-cd9150b5ec92" />
                  <ComponentPart refid="74fd56dc-5f67-4443-ad0a-7a88b9ada8db" />
                  <ComponentPart refid="de2d7411-1fad-4c67-9304-452f1c5dbfac" />
                  <ComponentPart refid="dea2ed0e-8675-4e11-a565-4a793b0b7608" />
                  <ComponentPart refid="ceedde6c-faa8-4b55-a91f-c986ee1d866d" />
                  <ComponentPart refid="2c2c4550-9c99-4567-9abb-22f18700a0ef" />
                  <ComponentPart refid="ca30bc4a-7c09-4d64-969b-c087b00f852c" />
                </ComponentParts>
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>NewspaperArticle</ReferenceTypeId>
          <ShowInGui>true</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="03bda433-0c77-415c-b360-cd9150b5ec92" />
                  <ComponentPart refid="de2d7411-1fad-4c67-9304-452f1c5dbfac" />
                  <ComponentPart refid="dea2ed0e-8675-4e11-a565-4a793b0b7608" />
                  <ComponentPart refid="5bbe3121-13e2-4220-a080-2a9b875acc7e" />
                  <ComponentPart refid="bd592c10-11ef-43d0-97cc-aeec9da55f46" />
                  <ComponentPart refid="74fd56dc-5f67-4443-ad0a-7a88b9ada8db" />
                </ComponentParts>
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>UnpublishedWork</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="5e9eafff-ba0e-425e-81e7-a3e765f1baf5" />
                  <ComponentPart refid="74fd56dc-5f67-4443-ad0a-7a88b9ada8db" />
                  <ComponentPart refid="c1447ceb-cc5e-4e5f-a3a5-5351074950fb" />
                  <ComponentPart refid="b3848884-7e13-49c4-97d8-1cb10966bc63" />
                  <ComponentPart refid="ceedde6c-faa8-4b55-a91f-c986ee1d866d" />
                  <ComponentPart refid="a41f2013-77f6-4de6-a7bd-e45c03f9e96e" />
                  <ComponentPart refid="2c2c4550-9c99-4567-9abb-22f18700a0ef" />
                  <ComponentPart refid="61f0c59f-6319-4276-8413-a17b555ae045" />
                  <ComponentPart refid="ca30bc4a-7c09-4d64-969b-c087b00f852c" />
                </ComponentParts>
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Unknown</ReferenceTypeId>
          <ShowInGui>true</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="5e9eafff-ba0e-425e-81e7-a3e765f1baf5" />
                  <ComponentPart refid="de2d7411-1fad-4c67-9304-452f1c5dbfac" />
                  <ComponentPart refid="dea2ed0e-8675-4e11-a565-4a793b0b7608" />
                  <ComponentPart refid="b4316588-f709-4497-ab76-59f2bca8afd9" />
                  <ComponentPart refid="a41f2013-77f6-4de6-a7bd-e45c03f9e96e" />
                  <ComponentPart refid="04f56958-12cc-456c-8029-4d52fac8e60b" />
                  <ComponentPart refid="7de3982d-c43f-48b4-ae96-12b895f55264" />
                  <ComponentPart refid="79204226-d788-4faf-b603-a9d9904a0e6c" />
                  <ComponentPart refid="61f0c59f-6319-4276-8413-a17b555ae045" />
                  <ComponentPart refid="bd592c10-11ef-43d0-97cc-aeec9da55f46" />
                  <ComponentPart refid="3a8a8765-0c11-4ec0-9349-b177f1ae1d07" />
                  <ComponentPart refid="d0770e42-519d-4082-831b-e8bef3634807" />
                  <ComponentPart refid="ca30bc4a-7c09-4d64-969b-c087b00f852c" />
                  <ComponentPart refid="dfaf4d88-ae3a-4f0a-8f31-b468619fbd1b" />
                  <ComponentPart refid="b2d0b5c0-56ab-4a03-af98-3cb18d84e6bb" />
                  <ComponentPart refid="74fd56dc-5f67-4443-ad0a-7a88b9ada8db" />
                </ComponentParts>
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>ArchiveMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>BookEdited</ParentReferenceTypeId>
          <ReferenceTypeId>ArchiveMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>UnpublishedWork</ParentReferenceTypeId>
          <ReferenceTypeId>ArchiveMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>CollectedWorks</ParentReferenceTypeId>
          <ReferenceTypeId>ArchiveMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>AudioBook</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>AudioOrVideoDocument</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>RadioPlay</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>CollectedWorks</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>ComputerProgram</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>BookEdited</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>ConferenceProceedings</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>CourtDecision</ReferenceTypeId>
          <ShowInGui>true</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="5e9eafff-ba0e-425e-81e7-a3e765f1baf5" />
                  <ComponentPart refid="de2d7411-1fad-4c67-9304-452f1c5dbfac" />
                  <ComponentPart refid="ceedde6c-faa8-4b55-a91f-c986ee1d866d" />
                  <ComponentPart refid="b4316588-f709-4497-ab76-59f2bca8afd9" />
                  <ComponentPart refid="04f56958-12cc-456c-8029-4d52fac8e60b" />
                  <ComponentPart refid="7de3982d-c43f-48b4-ae96-12b895f55264" />
                  <ComponentPart refid="bd592c10-11ef-43d0-97cc-aeec9da55f46" />
                  <ComponentPart refid="3a8a8765-0c11-4ec0-9349-b177f1ae1d07" />
                  <ComponentPart refid="ca30bc4a-7c09-4d64-969b-c087b00f852c" />
                  <ComponentPart refid="b2d0b5c0-56ab-4a03-af98-3cb18d84e6bb" />
                  <ComponentPart refid="74fd56dc-5f67-4443-ad0a-7a88b9ada8db" />
                </ComponentParts>
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>InterviewMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="03bda433-0c77-415c-b360-cd9150b5ec92" />
                  <ComponentPart refid="74fd56dc-5f67-4443-ad0a-7a88b9ada8db" />
                  <ComponentPart refid="c1447ceb-cc5e-4e5f-a3a5-5351074950fb" />
                  <ComponentPart refid="792e2abd-0126-427b-b517-a881722c3899" />
                  <ComponentPart refid="61f0c59f-6319-4276-8413-a17b555ae045" />
                  <ComponentPart refid="bd592c10-11ef-43d0-97cc-aeec9da55f46" />
                </ComponentParts>
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Map</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Movie</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>MusicTrack</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>MusicAlbum</ParentReferenceTypeId>
          <ReferenceTypeId>MusicTrack</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>NewsAgencyReport</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Patent</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>PersonalCommunication</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>PressRelease</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>RadioPlay</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Broadcast</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>File</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>MusicAlbum</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Standard</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>StatuteOrRegulation</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>BookEdited</ParentReferenceTypeId>
          <ReferenceTypeId>StatuteOrRegulation</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Manuscript</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Lecture</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="03bda433-0c77-415c-b360-cd9150b5ec92" />
                  <ComponentPart refid="74fd56dc-5f67-4443-ad0a-7a88b9ada8db" />
                  <ComponentPart refid="de2d7411-1fad-4c67-9304-452f1c5dbfac" />
                  <ComponentPart refid="dea2ed0e-8675-4e11-a565-4a793b0b7608" />
                  <ComponentPart refid="a41f2013-77f6-4de6-a7bd-e45c03f9e96e" />
                  <ComponentPart refid="61f0c59f-6319-4276-8413-a17b555ae045" />
                  <ComponentPart refid="bd592c10-11ef-43d0-97cc-aeec9da55f46" />
                  <ComponentPart refid="ca30bc4a-7c09-4d64-969b-c087b00f852c" />
                </ComponentParts>
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>BookEdited</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>LegalCommentary</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>LegalCommentary</ParentReferenceTypeId>
          <ReferenceTypeId>ContributionInLegalCommentary</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>Completed</EditState>
          <InheritFrom>BookEdited</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>SpecialIssue</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
      </TemplateUseCases>
    </RuleSet>
    <RuleSet type="Footnote">
      <MultipleEntryConsecutiveAuthorsOmitName>false</MultipleEntryConsecutiveAuthorsOmitName>
      <MultipleEntryConsecutiveAuthorsSeparator>, </MultipleEntryConsecutiveAuthorsSeparator>
      <MultipleEntryConsecutiveAuthorsSeparatorFontStyle behavior="Define" />
      <MultipleEntrySeparator>; </MultipleEntrySeparator>
      <MultipleEntrySeparatorFontStyle behavior="Define" />
      <SortOption>OrderOfAppearance</SortOption>
      <SortCustomPropertyIds />
      <UseSameReferenceAsPreviousConditionsForMultipleCitations>false</UseSameReferenceAsPreviousConditionsForMultipleCitations>
      <TemplateUseCases>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>JournalArticle</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Book</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>BookEdited</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>BookEdited</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>UnpublishedWork</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>CollectedWorks</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>ConferenceProceedings</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>SpecialIssue</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>InternetDocument</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Thesis</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>JournalArticle</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>NewspaperArticle</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>UnpublishedWork</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Unknown</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="0be517b1-6aea-46d4-9bb6-2c62ccff80db" />
                  <ComponentPart refid="79a85c4a-4b7d-401f-9750-b5633213bccd" />
                  <ComponentPart refid="83663154-b915-4657-939a-af4f211dd3c8" />
                </ComponentParts>
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>ArchiveMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>BookEdited</ParentReferenceTypeId>
          <ReferenceTypeId>ArchiveMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>UnpublishedWork</ParentReferenceTypeId>
          <ReferenceTypeId>ArchiveMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>CollectedWorks</ParentReferenceTypeId>
          <ReferenceTypeId>ArchiveMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>AudioBook</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>AudioOrVideoDocument</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>RadioPlay</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>CollectedWorks</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>ComputerProgram</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>BookEdited</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>ConferenceProceedings</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>CourtDecision</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>InterviewMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Map</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Movie</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>MusicTrack</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>MusicAlbum</ParentReferenceTypeId>
          <ReferenceTypeId>MusicTrack</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>NewsAgencyReport</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Patent</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>PersonalCommunication</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>PressRelease</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>RadioPlay</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Broadcast</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>File</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>MusicAlbum</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Standard</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>StatuteOrRegulation</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>BookEdited</ParentReferenceTypeId>
          <ReferenceTypeId>StatuteOrRegulation</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Manuscript</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Lecture</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>BookEdited</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>LegalCommentary</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>LegalCommentary</ParentReferenceTypeId>
          <ReferenceTypeId>ContributionInLegalCommentary</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>BookEdited</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>SpecialIssue</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
      </TemplateUseCases>
    </RuleSet>
    <RuleSet type="InTextCitation">
      <MergeAllReferencesFromMultipleCitationsInCompositeBibliographyCitations>false</MergeAllReferencesFromMultipleCitationsInCompositeBibliographyCitations>
      <MergeNonrecurringReferencesInMultipleCitations>false</MergeNonrecurringReferencesInMultipleCitations>
      <MultipleEntryConsecutiveAuthorsOmitName>false</MultipleEntryConsecutiveAuthorsOmitName>
      <MultipleEntryConsecutiveAuthorsSeparator>, </MultipleEntryConsecutiveAuthorsSeparator>
      <MultipleEntryConsecutiveAuthorsSeparatorFontStyle behavior="SameAsPrevious" />
      <MultipleEntrySeparator>, </MultipleEntrySeparator>
      <MultipleEntrySeparatorFontStyle behavior="SameAsPrevious" />
      <MultipleEntryMainIndexSeparator>, </MultipleEntryMainIndexSeparator>
      <MultipleEntryMainIndexSeparatorFontStyle behavior="SameAsPrevious" />
      <MultipleEntrySubIndexSeparator>, </MultipleEntrySubIndexSeparator>
      <MultipleEntrySubIndexSeparatorFontStyle behavior="SameAsPrevious" />
      <GroupIndexInBibliography>true</GroupIndexInBibliography>
      <GroupIndexInBibliographyMinConsecutiveNumbers>3</GroupIndexInBibliographyMinConsecutiveNumbers>
      <GroupIndexInBibliographySeparator>–</GroupIndexInBibliographySeparator>
      <RangifyMainIndexRangeCharactersFontStyle behavior="SameAsPrevious" />
      <RangifySubIndexInMultipleCitations>true</RangifySubIndexInMultipleCitations>
      <RangifySubIndexMinConsecutiveNumbers>3</RangifySubIndexMinConsecutiveNumbers>
      <RangifySubIndexRangeCharacters>–</RangifySubIndexRangeCharacters>
      <RangifySubIndexRangeCharactersFontStyle behavior="SameAsPrevious" />
      <ShowMainIndexNumbersInMultipleCitation>AlwaysButOncePerRange</ShowMainIndexNumbersInMultipleCitation>
      <SuppressSubIndexNumbersOnFullRange>true</SuppressSubIndexNumbersOnFullRange>
      <SortOption>IndexInBibliography</SortOption>
      <SortCustomPropertyIds />
      <UseSameReferenceAsPreviousConditionsForMultipleCitations>false</UseSameReferenceAsPreviousConditionsForMultipleCitations>
      <TemplateUseCases>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>JournalArticle</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Book</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>BookEdited</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>BookEdited</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>UnpublishedWork</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>CollectedWorks</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>ConferenceProceedings</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>SpecialIssue</ParentReferenceTypeId>
          <ReferenceTypeId>Contribution</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>InternetDocument</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Thesis</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>JournalArticle</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>NewspaperArticle</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>UnpublishedWork</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom />
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Unknown</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts>
                  <ComponentPart refid="0be517b1-6aea-46d4-9bb6-2c62ccff80db" />
                  <ComponentPart refid="79a85c4a-4b7d-401f-9750-b5633213bccd" />
                  <ComponentPart refid="83663154-b915-4657-939a-af4f211dd3c8" />
                </ComponentParts>
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>ArchiveMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>BookEdited</ParentReferenceTypeId>
          <ReferenceTypeId>ArchiveMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>UnpublishedWork</ParentReferenceTypeId>
          <ReferenceTypeId>ArchiveMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>CollectedWorks</ParentReferenceTypeId>
          <ReferenceTypeId>ArchiveMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>AudioBook</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>AudioOrVideoDocument</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>RadioPlay</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>CollectedWorks</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>ComputerProgram</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>BookEdited</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>ConferenceProceedings</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>CourtDecision</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>InterviewMaterial</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Map</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Movie</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>MusicTrack</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>MusicAlbum</ParentReferenceTypeId>
          <ReferenceTypeId>MusicTrack</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>NewsAgencyReport</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Patent</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>PersonalCommunication</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>PressRelease</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>RadioPlay</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Broadcast</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>File</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>MusicAlbum</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Standard</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>StatuteOrRegulation</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>BookEdited</ParentReferenceTypeId>
          <ReferenceTypeId>StatuteOrRegulation</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Book</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Manuscript</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>Unknown</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>Lecture</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>BookEdited</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>LegalCommentary</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>ContributionBookEdited</InheritFrom>
          <ParentReferenceTypeId>LegalCommentary</ParentReferenceTypeId>
          <ReferenceTypeId>ContributionInLegalCommentary</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
        <TemplateUseCase>
          <EditState>None</EditState>
          <InheritFrom>BookEdited</InheritFrom>
          <ParentReferenceTypeId>None</ParentReferenceTypeId>
          <ReferenceTypeId>SpecialIssue</ReferenceTypeId>
          <ShowInGui>false</ShowInGui>
          <Templates>
            <Template type="Fallback">
              <Template>
                <Name />
                <Notes />
                <ComponentParts />
              </Template>
            </Template>
          </Templates>
        </TemplateUseCase>
      </TemplateUseCases>
    </RuleSet>
  </RuleSets>
</CitaviCitationStyle>